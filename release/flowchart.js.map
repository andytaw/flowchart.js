{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.js","webpack:///webpack/bootstrap 007e8fc83162d0c06262","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.symbol.parallel.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_16__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","leftLines","rightLines","topLines","bottomLines","params","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","function","cursor","addEventListener","evt","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","render","self","lineLength","rightPoint","isPositioned","shift","symb","hasSymbolUnder","len","diff","Math","abs","leftPoint","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","yOffset","right","bottom","top","left","symbolX","symbolY","symbolTop","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","max","rightStart","topEnd","bottomStart","diffX","leftStart","topStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","minXFromSymbols","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","textAnchor","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbValue","getSymbol","getNextPath","flowSymb","getAnnotation","tmp","tmp_split","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Parallel","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","path1","path2","path3","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","match","entries","entry","sub","join","txtAndState","pop","ann","flowSymbols","iS","lenS","symbVal","realSymb","direction","condOpt","yes_annotation","no_annotation","nextSymb","lineStyleSymbols","iSS","lenSS","curSymb","nextSymbol","JSON","textMargin","yes_direction","direction_yes","no_direction","direction_no","startX","startY","dominant-baseline","yes_symbol","no_symbol","bottom_symbol","right_symbol","left_symbol","rect","path1_direction","path2_direction","path3_direction","direction_next","direction_path1","direction_path2","direction_path3","path1_symbol","path2_symbol","path3_symbol","top_symbol","topPoint","Raphael","handle","flowChart","maxHeight","maxY","minX","minY","chartY","endY","leftX","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","parallel","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","innerWrap","jQuery","$","paramFit","needle","haystack","isArray","includes","methods","init","each","$this","html","setFlowStateByParam","param","paramValue","newFlowState","nextSymbolKeys","property","hasOwnProperty","val","nski","nextSymbolKey","clearFlowState","fn","methodOrOptions","apply","slice","error"],"mappings":"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","file":"flowchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 9);\r\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\r\n\t__webpack_require__(/*! ./src/jquery-plugin */ 15);\r\n\t\r\n\tvar FlowChart = {\r\n\t\tparse: parse\r\n\t};\r\n\t\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.flowchart = FlowChart;\r\n\t}\r\n\t\r\n\tmodule.exports = FlowChart;\r\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\r\n\t  if (!options || typeof options === 'function') {\r\n\t    return defaultOptions;\r\n\t  }\r\n\t\r\n\t  var merged = {};\r\n\t  for (var attrname in defaultOptions) {\r\n\t    merged[attrname] = defaultOptions[attrname];\r\n\t  }\r\n\t\r\n\t  for (attrname in options) {\r\n\t    if (options[attrname]) {\r\n\t      if (typeof merged[attrname] === 'object') {\r\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n\t      } else {\r\n\t        merged[attrname] = options[attrname];\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  return merged;\r\n\t}\r\n\t\r\n\tfunction _inherits(ctor, superCtor) {\r\n\t  if (typeof(Object.create) === 'function') {\r\n\t    // implementation from standard node.js 'util' module\r\n\t    ctor.super_ = superCtor;\r\n\t    ctor.prototype = Object.create(superCtor.prototype, {\r\n\t      constructor: {\r\n\t        value: ctor,\r\n\t        enumerable: false,\r\n\t        writable: true,\r\n\t        configurable: true\r\n\t      }\r\n\t    });\r\n\t  } else {\r\n\t    // old school shim for old browsers\r\n\t    ctor.super_ = superCtor;\r\n\t    var TempCtor = function () {};\r\n\t    TempCtor.prototype = superCtor.prototype;\r\n\t    ctor.prototype = new TempCtor();\r\n\t    ctor.prototype.constructor = ctor;\r\n\t  }\r\n\t}\r\n\t\r\n\t// move dependent functions to a container so that\r\n\t// they can be overriden easier in no jquery environment (node.js)\r\n\tmodule.exports = {\r\n\t  defaults: _defaults,\r\n\t  inherits: _inherits\r\n\t};\r\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawLine = drawAPI.drawLine;\r\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\t\r\n\tfunction Symbol(chart, options, symbol) {\r\n\t  this.chart = chart;\r\n\t  this.group = this.chart.paper.set();\r\n\t  this.symbol = symbol;\r\n\t  this.connectedTo = [];\r\n\t  this.symbolType = options.symbolType;\r\n\t  this.flowstate = (options.flowstate || 'future');\r\n\t  this.lineStyle = (options.lineStyle || {});\r\n\t  this.key = (options.key || '');\r\n\t  this.leftLines = [];\r\n\t  this.rightLines = [];\r\n\t  this.topLines = [];\r\n\t  this.bottomLines = [];\r\n\t  this.params = options.params;\r\n\t\r\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\t\r\n\t  this.text = this.chart.paper.text(0, 0, options.text);\r\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\r\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\t\r\n\t  this.text.attr({\r\n\t    'text-anchor': 'start',\r\n\t    'x'          : this.getAttr('text-margin'),\r\n\t    'fill'       : this.getAttr('font-color'),\r\n\t    'font-size'  : this.getAttr('font-size')\r\n\t  });\r\n\t\r\n\t  var font  = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t\r\n\t  if (font) this.text.attr({ 'font': font });\r\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\r\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { this.text.attr('href', options.link); }\r\n\t  \r\n\t  //ndrqu Add click function with event and options params\r\n\t  if (options.function) { \r\n\t    this.text.attr({ 'cursor' : 'pointer' });\r\n\t\r\n\t    this.text.node.addEventListener(\"click\", function(evt) {\r\n\t        window[options.function](evt,options);\r\n\t    }, false);\r\n\t  }\r\n\t\r\n\t  if (options.target) { this.text.attr('target', options.target); }\r\n\t\r\n\t  var maxWidth = this.getAttr('maxWidth');\r\n\t  if (maxWidth) {\r\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n\t    var words = options.text.split(' ');\r\n\t    var tempText = \"\";\r\n\t    for (var i=0, ii=words.length; i<ii; i++) {\r\n\t      var word = words[i];\r\n\t      this.text.attr(\"text\", tempText + \" \" + word);\r\n\t      if (this.text.getBBox().width > maxWidth) {\r\n\t        tempText += \"\\n\" + word;\r\n\t      } else {\r\n\t        tempText += \" \" + word;\r\n\t      }\r\n\t    }\r\n\t    this.text.attr(\"text\", tempText.substring(1));\r\n\t  }\r\n\t\r\n\t  this.group.push(this.text);\r\n\t\r\n\t  if (symbol) {\r\n\t    var tmpMargin = this.getAttr('text-margin');\r\n\t\r\n\t    symbol.attr({\r\n\t      'fill' : this.getAttr('fill'),\r\n\t      'stroke' : this.getAttr('element-color'),\r\n\t      'stroke-width' : this.getAttr('line-width'),\r\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\r\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\r\n\t    });\r\n\t\r\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t    if (options.link) { symbol.attr('href', options.link); }\r\n\t    if (options.target) { symbol.attr('target', options.target); }\r\n\t\r\n\t    //ndrqu Add click function with event and options params\r\n\t    if (options.function) { \r\n\t        symbol.node.addEventListener(\"click\", function(evt) {\r\n\t          window[options.function](evt,options);\r\n\t        }, false);\r\n\t      symbol.attr({ 'cursor' : 'pointer' });\r\n\t    }\r\n\t    if (options.key) { symbol.node.id = options.key; }\r\n\t\r\n\t    this.group.push(symbol);\r\n\t    symbol.insertBefore(this.text);\r\n\t\r\n\t    this.text.attr({\r\n\t      'y': symbol.getBBox().height/2\r\n\t    });\r\n\t\r\n\t    this.initialize();\r\n\t  }\r\n\t\r\n\t}\r\n\t\r\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\n\tSymbol.prototype.getAttr = function(attName) {\r\n\t  if (!this.chart) {\r\n\t    return undefined;\r\n\t  }\r\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n\t  var opt1;\r\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n\t  }\r\n\t  return (opt1 || opt2 || opt3);\r\n\t};\r\n\t\r\n\tSymbol.prototype.initialize = function() {\r\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\t\r\n\t  this.width = this.group.getBBox().width;\r\n\t  this.height = this.group.getBBox().height;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getCenter = function() {\r\n\t  return {x: this.getX() + this.width/2,\r\n\t          y: this.getY() + this.height/2};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getX = function() {\r\n\t  return this.group.getBBox().x;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getY = function() {\r\n\t  return this.group.getBBox().y;\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftX = function(x) {\r\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.setX = function(x) {\r\n\t  this.group.transform('t' + x + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n\t};\r\n\t\r\n\tSymbol.prototype.setY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + y);\r\n\t};\r\n\t\r\n\tSymbol.prototype.getTop = function() {\r\n\t  var y = this.getY();\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getBottom = function() {\r\n\t  var y = this.getY() + this.height;\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX();\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.render = function() {\r\n\t  if (this.next) {\r\n\t\r\n\t    var self = this;\r\n\t    var lineLength = this.getAttr('line-length');\r\n\t\r\n\t    if (this.next_direction === 'right') {\r\n\t\r\n\t      var rightPoint = this.getRight();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t        this.next.setY(rightPoint.y - this.next.height/2);\r\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t        (function shift() {\r\n\t          var hasSymbolUnder = false;\r\n\t          var symb;\r\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t            symb = self.chart.symbols[i];\r\n\t\r\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t\r\n\t          if (hasSymbolUnder) {\r\n\t            if (self.next.symbolType === 'end') return;\r\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\r\n\t            shift();\r\n\t          }\r\n\t        })();\r\n\t\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    } else if (this.next_direction === 'left') {\r\n\t\r\n\t      var leftPoint = this.getLeft();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t        this.next.setY(leftPoint.y - this.next.height/2);\r\n\t        this.next.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n\t\r\n\t        (function shift() {\r\n\t          var hasSymbolUnder = false;\r\n\t          var symb;\r\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t            symb = self.chart.symbols[i];\r\n\t\r\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t\r\n\t          if (hasSymbolUnder) {\r\n\t            if (self.next.symbolType === 'end') return;\r\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\r\n\t            shift();\r\n\t          }\r\n\t        })();\r\n\t\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    } else {\r\n\t      var bottomPoint = this.getBottom();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.renderLines = function() {\r\n\t  if (this.next) {\r\n\t    if (this.next_direction) {\r\n\t      this.drawLineTo(this.next, this.getAttr('arrow-text') || '', this.next_direction);\r\n\t    } else {\r\n\t      this.drawLineTo(this.next, this.getAttr('arrow-text') || '');\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\r\n\t    this.connectedTo.push(symbol);\r\n\t  }\r\n\t\r\n\t  var x = this.getCenter().x,\r\n\t      y = this.getCenter().y,\r\n\t      right = this.getRight(),\r\n\t      bottom = this.getBottom(),\r\n\t      top = this.getTop(),\r\n\t      left = this.getLeft();\r\n\t\r\n\t  var symbolX = symbol.getCenter().x,\r\n\t      symbolY = symbol.getCenter().y,\r\n\t      symbolTop = symbol.getTop(),\r\n\t      symbolRight = symbol.getRight(),\r\n\t      symbolLeft = symbol.getLeft();\r\n\t\r\n\t  var isOnSameColumn = x === symbolX,\r\n\t      isOnSameLine = y === symbolY,\r\n\t      isUnder = y < symbolY,\r\n\t      isUpper = y > symbolY || this === symbol,\r\n\t      isLeft = x > symbolX,\r\n\t      isRight = x < symbolX;\r\n\t\r\n\t  var maxX = 0,\r\n\t      line,\r\n\t      yOffset,\r\n\t      lineLength = this.getAttr('line-length'),\r\n\t      lineWith = this.getAttr('line-width');\r\n\t\r\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n\t    if (symbol.topLines.length === 0 && this.bottomLines.length === 0) {\r\n\t      line = drawLine(this.chart, bottom, symbolTop, text);\r\n\t    } else {\r\n\t      yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: symbolTop.x, y: symbolTop.y - yOffset},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.bottomLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n\t    if (symbol.leftLines.length === 0 && this.rightLines.length === 0) {\r\n\t      line = drawLine(this.chart, right, symbolLeft, text);\r\n\t    } else {\r\n\t      yOffset = Math.max(symbol.leftLines.length, this.rightLines.length) * 10;\r\n\t      line = drawLine(this.chart, right, [\r\n\t        {x: right.x, y: right.y - yOffset},\r\n\t        {x: right.x, y: symbolLeft.y - yOffset},\r\n\t        {x: symbolLeft.x, y: symbolLeft.y - yOffset},\r\n\t        {x: symbolLeft.x, y: symbolLeft.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.rightLines.push(line);\r\n\t    symbol.leftLines.push(line);\r\n\t    this.rightStart = true;\r\n\t    symbol.leftEnd = true;\r\n\t    maxX = symbolLeft.x;\r\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n\t    if (symbol.rightLines.length === 0 && this.leftLines.length === 0) {\r\n\t      line = drawLine(this.chart, left, symbolRight, text);\r\n\t    } else {\r\n\t      yOffset = Math.max(symbol.rightLines.length, this.leftLines.length) * 10;\r\n\t      line = drawLine(this.chart, right, [\r\n\t        {x: right.x, y: right.y - yOffset},\r\n\t        {x: right.x, y: symbolRight.y - yOffset},\r\n\t        {x: symbolRight.x, y: symbolRight.y - yOffset},\r\n\t        {x: symbolRight.x, y: symbolRight.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.leftLines.push(line);\r\n\t    symbol.rightLines.push(line);\r\n\t    this.leftStart = true;\r\n\t    symbol.rightEnd = true;\r\n\t    maxX = symbolRight.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y - yOffset},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y - yOffset},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n\t    if (this.leftEnd && isUpper) {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2 - yOffset},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    } else {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.bottomLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isRight && isUnder) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x;\r\n\t    if (symbolTop.x > maxX) maxX = symbolTop.x;\r\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2 - yOffset},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((origin && origin === 'right') && isLeft) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'right') && isRight) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: symbolTop.x, y: right.y - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - yOffset}\r\n\t    ], text);\r\n\t    this.rightLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2 - yOffset},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + lineLength/2;\r\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n\t    var diffX = left.x - lineLength/2;\r\n\t    if (symbolLeft.x < left.x) {\r\n\t      diffX = symbolLeft.x - lineLength/2;\r\n\t    }\r\n\t    yOffset = Math.max(symbol.topLines.length, this.leftLines.length) * 10;\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: diffX, y: left.y - yOffset},\r\n\t      {x: diffX, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  } else if ((origin === 'left')) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.leftLines.length) * 10;\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: left.y},\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  } else if ((origin === 'top')) {\r\n\t    yOffset = Math.max(symbol.topLines.length, this.topLines.length) * 10;\r\n\t    line = drawLine(this.chart, top, [\r\n\t      {x: top.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.topLines.push(line);\r\n\t    symbol.topLines.push(line);\r\n\t    this.topStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = top.x;\r\n\t  }\r\n\t\r\n\t  //update line style\r\n\t  if (this.lineStyle[symbol.key] && line){\r\n\t    line.attr(this.lineStyle[symbol.key]);\r\n\t  }\r\n\t\r\n\t  if (line) {\r\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n\t      var otherLine = this.chart.lines[l];\r\n\t\r\n\t      var ePath = otherLine.attr('path'),\r\n\t          lPath = line.attr('path');\r\n\t\r\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n\t        var newPath = [];\r\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\t\r\n\t        var line1_from_x = newPath[0][1];\r\n\t        var line1_from_y = newPath[0][2];\r\n\t        var line1_to_x = newPath[1][1];\r\n\t        var line1_to_y = newPath[1][2];\r\n\t\r\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n\t          var newLinePath = [];\r\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\t\r\n\t          var line2_from_x = newLinePath[0][1];\r\n\t          var line2_from_y = newLinePath[0][2];\r\n\t          var line2_to_x = newLinePath[1][1];\r\n\t          var line2_to_y = newLinePath[1][2];\r\n\t\r\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n\t          if (res.onLine1 && res.onLine2) {\r\n\t\r\n\t            var newSegment;\r\n\t            if (line2_from_y === line2_to_y) {\r\n\t              if (line2_from_x > line2_to_x) {\r\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            } else {\r\n\t              if (line2_from_y > line2_to_y) {\r\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            }\r\n\t\r\n\t            lP += 2;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    this.chart.lines.push(line);\r\n\t    if (this.chart.minXFromSymbols === undefined || this.chart.minXFromSymbols > left.x) {\r\n\t      this.chart.minXFromSymbols = left.x;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n\t    this.chart.maxXFromLine = maxX;\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Symbol;\r\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\r\n\t  var i, len;\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [location.x, location.y];\r\n\t  for (i = 0, len = points.length; i < len; i++) {\r\n\t    pathValues.push(points[i].x);\r\n\t    pathValues.push(points[i].y);\r\n\t  }\r\n\t  var symbol = chart.paper.path(path, pathValues);\r\n\t  symbol.attr('stroke', chart.options['element-color']);\r\n\t  symbol.attr('stroke-width', chart.options['line-width']);\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) symbol.attr({ 'font': font });\r\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\r\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\t\r\n\t  return symbol;\r\n\t}\r\n\t\r\n\tfunction drawLine(chart, from, to, text) {\r\n\t  var i, len;\r\n\t\r\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n\t    to = [to];\r\n\t  }\r\n\t\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [from.x, from.y];\r\n\t  for (i = 0, len = to.length; i < len; i++) {\r\n\t    pathValues.push(to[i].x);\r\n\t    pathValues.push(to[i].y);\r\n\t  }\r\n\t\r\n\t  var line = chart.paper.path(path, pathValues);\r\n\t  line.attr({\r\n\t    stroke: chart.options['line-color'],\r\n\t    'stroke-width': chart.options['line-width'],\r\n\t    'arrow-end': chart.options['arrow-end']\r\n\t  });\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) line.attr({ 'font': font });\r\n\t  if (fontF) line.attr({ 'font-family': fontF });\r\n\t  if (fontW) line.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (text) {\r\n\t\r\n\t    var centerText = false;\r\n\t\r\n\t    var textPath = chart.paper.text(0, 0, text);\r\n\t    var textAnchor = 'start';\r\n\t\r\n\t    var isHorizontal = false;\r\n\t    var firstTo = to[0];\r\n\t\r\n\t    if (from.y === firstTo.y) {\r\n\t      isHorizontal = true;\r\n\t    }\r\n\t\r\n\t    var x = 0,\r\n\t        y = 0;\r\n\t\r\n\t    if (centerText) {\r\n\t      if (from.x > firstTo.x) {\r\n\t        x = from.x - (from.x - firstTo.x)/2;\r\n\t      } else {\r\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\r\n\t      }\r\n\t\r\n\t      if (from.y > firstTo.y) {\r\n\t        y = from.y - (from.y - firstTo.y)/2;\r\n\t      } else {\r\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\r\n\t      }\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        x -= textPath.getBBox().width/2;\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin'];\r\n\t        y -= textPath.getBBox().height/2;\r\n\t      }\r\n\t    } else {\r\n\t      x = from.x;\r\n\t      y = from.y;\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        if (from.x > firstTo.x) {\r\n\t          x -= chart.options['text-margin']/2;\r\n\t          textAnchor = 'end';\r\n\t        } else {\r\n\t          x += chart.options['text-margin']/2;\r\n\t        }\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin']/2;\r\n\t        y += chart.options['text-margin'];\r\n\t        if (from.y > firstTo.y) {\r\n\t          y -= chart.options['text-margin']*2;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    textPath.attr({\r\n\t      'text-anchor': textAnchor,\r\n\t      'font-size': chart.options['font-size'],\r\n\t      'fill': chart.options['font-color'],\r\n\t      x: x,\r\n\t      y: y\r\n\t    });\r\n\t\r\n\t    if (font) textPath.attr({ 'font': font });\r\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\r\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n\t  }\r\n\t\r\n\t  return line;\r\n\t}\r\n\t\r\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n\t  var denominator, a, b, numerator1, numerator2, result = {\r\n\t    x: null,\r\n\t    y: null,\r\n\t    onLine1: false,\r\n\t    onLine2: false\r\n\t  };\r\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n\t  if (denominator === 0) {\r\n\t    return result;\r\n\t  }\r\n\t  a = line1StartY - line2StartY;\r\n\t  b = line1StartX - line2StartX;\r\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n\t  a = numerator1 / denominator;\r\n\t  b = numerator2 / denominator;\r\n\t\r\n\t  // if we cast these lines infinitely in both directions, they intersect here:\r\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n\t  /*\r\n\t  // it is worth noting that this should be the same as:\r\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\r\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\r\n\t  */\r\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\r\n\t  if (a > 0 && a < 1) {\r\n\t    result.onLine1 = true;\r\n\t  }\r\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\r\n\t  if (b > 0 && b < 1) {\r\n\t    result.onLine2 = true;\r\n\t  }\r\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\r\n\t  return result;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t\tdrawPath: drawPath,\r\n\t\tdrawLine: drawLine,\r\n\t\tcheckLineIntersection: checkLineIntersection\r\n\t};\r\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 7);\r\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 13);\r\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 10);\r\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 12);\r\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 11);\r\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 14);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\tvar Parallel = __webpack_require__(/*! ./flowchart.symbol.parallel */ 6);\r\n\t\r\n\tfunction parse(input) {\r\n\t  input = input || '';\r\n\t  input = input.trim();\r\n\t\r\n\t  var chart = {\r\n\t    symbols: {},\r\n\t    start: null,\r\n\t    drawSVG: function(container, options) {\r\n\t      var self = this;\r\n\t\r\n\t      if (this.diagram) {\r\n\t        this.diagram.clean();\r\n\t      }\r\n\t\r\n\t      var diagram = new FlowChart(container, options);\r\n\t      this.diagram = diagram;\r\n\t      var dispSymbols = {};\r\n\t\r\n\t      function getDisplaySymbol(s) {\r\n\t        if (dispSymbols[s.key]) {\r\n\t          return dispSymbols[s.key];\r\n\t        }\r\n\t\r\n\t        switch (s.symbolType) {\r\n\t          case 'start':\r\n\t            dispSymbols[s.key] = new Start(diagram, s);\r\n\t            break;\r\n\t          case 'end':\r\n\t            dispSymbols[s.key] = new End(diagram, s);\r\n\t            break;\r\n\t          case 'operation':\r\n\t            dispSymbols[s.key] = new Operation(diagram, s);\r\n\t            break;\r\n\t          case 'inputoutput':\r\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\r\n\t            break;\r\n\t          case 'subroutine':\r\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n\t            break;\r\n\t          case 'condition':\r\n\t            dispSymbols[s.key] = new Condition(diagram, s);\r\n\t            break;\r\n\t          case 'parallel':\r\n\t            dispSymbols[s.key] = new Parallel(diagram, s);\r\n\t            break;\r\n\t          default:\r\n\t            return new Error('Wrong symbol type!');\r\n\t        }\r\n\t\r\n\t        return dispSymbols[s.key];\r\n\t      }\r\n\t\r\n\t      (function constructChart(s, prevDisp, prev) {\r\n\t        var dispSymb = getDisplaySymbol(s);\r\n\t\r\n\t        if (self.start === s) {\r\n\t          diagram.startWith(dispSymb);\r\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n\t          if (prevDisp instanceof(Condition)) {\r\n\t            if (prev.yes === s) {\r\n\t              prevDisp.yes(dispSymb);\r\n\t            }\r\n\t            if (prev.no === s) {\r\n\t              prevDisp.no(dispSymb);\r\n\t            }\r\n\t          } else if (prevDisp instanceof(Parallel)) {\r\n\t            if (prev.path1 === s) {\r\n\t              prevDisp.path1(dispSymb);\r\n\t            }\r\n\t            if (prev.path2 === s) {\r\n\t              prevDisp.path2(dispSymb);\r\n\t            }\r\n\t            if (prev.path3 === s) {\r\n\t              prevDisp.path3(dispSymb);\r\n\t            }\r\n\t          } else {\r\n\t            prevDisp.then(dispSymb);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (dispSymb.pathOk) {\r\n\t          return dispSymb;\r\n\t        }\r\n\t\r\n\t        if (dispSymb instanceof(Condition)) {\r\n\t          if (s.yes) {\r\n\t            constructChart(s.yes, dispSymb, s);\r\n\t          }\r\n\t          if (s.no) {\r\n\t            constructChart(s.no, dispSymb, s);\r\n\t          }\r\n\t        } else if (dispSymb instanceof(Parallel)) {\r\n\t          if (s.path1) {\r\n\t            constructChart(s.path1, dispSymb, s);\r\n\t          }\r\n\t          if (s.path2) {\r\n\t            constructChart(s.path2, dispSymb, s);\r\n\t          }\r\n\t          if (s.path3) {\r\n\t            constructChart(s.path3, dispSymb, s);\r\n\t          }\r\n\t        } else if (s.next) {\r\n\t          constructChart(s.next, dispSymb, s);\r\n\t        }\r\n\t\r\n\t        return dispSymb;\r\n\t      })(this.start);\r\n\t\r\n\t      diagram.render();\r\n\t    },\r\n\t    clean: function() {\r\n\t      this.diagram.clean();\r\n\t    },\r\n\t    options: function() {\r\n\t      return this.diagram.options;\r\n\t    }\r\n\t  };\r\n\t\r\n\t  var lines = [];\r\n\t  var prevBreak = 0;\r\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n\t      var line0 = input.substring(prevBreak, i0);\r\n\t      prevBreak = i0 + 1;\r\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (prevBreak < input.length) {\r\n\t    lines.push(input.substr(prevBreak));\r\n\t  }\r\n\t\r\n\t  for (var l = 1, len = lines.length; l < len;) {\r\n\t    var currentLine = lines[l];\r\n\t\r\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n\t      lines[l - 1] += '\\n' + currentLine;\r\n\t      lines.splice(l, 1);\r\n\t      len--;\r\n\t    } else {\r\n\t      l++;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function getStyle(s){\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return s.substring(startIndex,endIndex);\r\n\t    }\r\n\t    return '{}';\r\n\t  }\r\n\t\r\n\t  function getSymbValue(s){\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return s.substring(startIndex,endIndex);\r\n\t    }\r\n\t    return '';\r\n\t  }\r\n\t\r\n\t  function getSymbol(s) {\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\r\n\t    }\r\n\t    return chart.symbols[s];\r\n\t  }\r\n\t\r\n\t  function getNextPath(s) {\r\n\t    var next = 'next';\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      next = flowSymb.substring(startIndex, endIndex);\r\n\t      if (next.indexOf(',') < 0) {\r\n\t        if (next !== 'yes' && next !== 'no') {\r\n\t          next = 'next, ' + next;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t    return next;\r\n\t  }\r\n\t  \r\n\t  function getAnnotation(s) {\r\n\t\tvar startIndex = s.indexOf(\"(\") + 1, endIndex = s.indexOf(\")\");\r\n\t\tvar tmp = s.substring(startIndex, endIndex);\r\n\t\tif(tmp.indexOf(\",\") > 0) { tmp = tmp.substring(0, tmp.indexOf(\",\")); }\r\n\t\tvar tmp_split = tmp.split(\"@\");\r\n\t\tif(tmp_split.length > 1)\r\n\t\t\treturn startIndex >= 0 && endIndex >= 0 ? tmp_split[1] : \"\";\r\n\t  }\r\n\t\r\n\t  while (lines.length > 0) {\r\n\t    var line = lines.splice(0, 1)[0].trim();\r\n\t\r\n\t    if (line.indexOf('=>') >= 0) {\r\n\t      // definition\r\n\t      var parts = line.split('=>');\r\n\t      var symbol = {\r\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\r\n\t        symbolType: parts[1],\r\n\t        text: null,\r\n\t        link: null,\r\n\t        target: null,\r\n\t        flowstate: null,\r\n\t        function: null,\r\n\t        lineStyle: {},\r\n\t        params: {}\r\n\t      };\r\n\t\r\n\t      //parse parameters\r\n\t      var params = parts[0].match(/\\((.*)\\)/);\r\n\t      if (params && params.length > 1){\r\n\t        var entries = params[1].split(',');\r\n\t        for(var i = 0; i < entries.length; i++) {\r\n\t          var entry = entries[i].split('=');\r\n\t          if (entry.length == 2) {\r\n\t            symbol.params[entry[0]] = entry[1];\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      var sub;\r\n\t\r\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n\t        sub = symbol.symbolType.split(': ');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.text = sub.join(': ');\r\n\t      }\r\n\t\r\n\t      if (symbol.text && symbol.text.indexOf(':$') >= 0) {\r\n\t        sub = symbol.text.split(':$');\r\n\t        symbol.text = sub.shift();\r\n\t        symbol.function = sub.join(':$');\r\n\t      } else if (symbol.symbolType.indexOf(':$') >= 0) {\r\n\t        sub = symbol.symbolType.split(':$');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.function = sub.join(':$');\r\n\t      } else if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n\t        sub = symbol.text.split(':>');\r\n\t        symbol.text = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n\t        sub = symbol.symbolType.split(':>');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      }\r\n\t\r\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n\t      }\r\n\t\r\n\t      /* adding support for links */\r\n\t      if (symbol.link) {\r\n\t        var startIndex = symbol.link.indexOf('[') + 1;\r\n\t        var endIndex = symbol.link.indexOf(']');\r\n\t        if (startIndex >= 0 && endIndex >= 0) {\r\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n\t        }\r\n\t      }\r\n\t      /* end of link support */\r\n\t\r\n\t      /* adding support for flowstates */\r\n\t      if (symbol.text) {\r\n\t        if (symbol.text.indexOf('|') >= 0) {\r\n\t          var txtAndState = symbol.text.split('|');\r\n\t          symbol.flowstate = txtAndState.pop().trim();\r\n\t          symbol.text = txtAndState.join('|');\r\n\t        }\r\n\t      }\r\n\t      /* end of flowstate support */\r\n\t\r\n\t      chart.symbols[symbol.key] = symbol;\r\n\t\r\n\t    } else if (line.indexOf('->') >= 0) {\r\n\t      var ann = getAnnotation(line);\r\n\t      if (ann) {\r\n\t        line = line.replace('@' + ann, ''); \r\n\t      }\r\n\t      // flow\r\n\t      var flowSymbols = line.split('->');\r\n\t      for (var iS = 0, lenS = flowSymbols.length; iS < lenS; iS++) {\r\n\t        var flowSymb = flowSymbols[iS];\r\n\t        var symbVal = getSymbValue(flowSymb);\r\n\t\r\n\t        if (symbVal === 'true' || symbVal === 'false') {\r\n\t          // map true or false to yes or no respectively\r\n\t          flowSymb = flowSymb.replace('true', 'yes');\r\n\t          flowSymb = flowSymb.replace('false', 'no');\r\n\t        }\r\n\t        \r\n\t        var next = getNextPath(flowSymb);\r\n\t        var realSymb = getSymbol(flowSymb);\r\n\t\r\n\t        var direction = null;\r\n\t        if (next.indexOf(',') >= 0) {\r\n\t          var condOpt = next.split(',');\r\n\t          next = condOpt[0];\r\n\t          direction = condOpt[1].trim();\r\n\t        }\r\n\t\r\n\t        if (ann) {\r\n\t          if (next == \"yes\" || next == \"true\")\r\n\t            realSymb.yes_annotation = ann;\r\n\t          else\r\n\t            realSymb.no_annotation = ann;\r\n\t          ann = null;\r\n\t        }\r\n\t\r\n\t        if (!chart.start) {\r\n\t          chart.start = realSymb;\r\n\t        }\r\n\t\r\n\t        if (iS + 1 < lenS) {\r\n\t          var nextSymb = flowSymbols[iS + 1];\r\n\t          realSymb[next] = getSymbol(nextSymb);\r\n\t          realSymb['direction_' + next] = direction;\r\n\t          direction = null;\r\n\t        }\r\n\t      }\r\n\t    } else if (line.indexOf('@>') >= 0) {\r\n\t\r\n\t      // line style\r\n\t      var lineStyleSymbols = line.split('@>');\r\n\t      for (var iSS = 0, lenSS = lineStyleSymbols.length; iSS < lenSS; iSS++) {\r\n\t        if ((iSS + 1) !== lenSS) {\r\n\t          var curSymb = getSymbol(lineStyleSymbols[iSS]);\r\n\t          var nextSymbol = getSymbol(lineStyleSymbols[iSS+1]);\r\n\t\r\n\t          curSymb['lineStyle'][nextSymbol.key] = JSON.parse(getStyle(lineStyleSymbols[iSS + 1]));\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t  }\r\n\t  return chart;\r\n\t}\r\n\t\r\n\tmodule.exports = parse;\r\n\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction Condition(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.yes_annotation = options.yes_annotation;\r\n\t  this.no_annotation = options.no_annotation;\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t  this.yes_direction = options.direction_yes;\r\n\t  this.no_direction = options.direction_no;\r\n\t  if (!this.no_direction && this.yes_direction === 'right') {\r\n\t    this.no_direction = 'bottom';\r\n\t  } else if (!this.yes_direction && this.no_direction === 'bottom') {\r\n\t    this.yes_direction = 'right'\r\n\t  }\r\n\t  this.yes_direction = this.yes_direction || 'bottom';\r\n\t  this.no_direction = this.no_direction || 'right';\r\n\t\r\n\t  var width = 200;\r\n\t  var height = 100;\r\n\t  var startX = 0;\r\n\t  var startY = 0;\r\n\t\r\n\t  this.text.attr({\r\n\t    x: 100,\r\n\t    y: 50,\r\n\t    'text-anchor':'middle',\r\n\t    'dominant-baseline': 'middle'\r\n\t  });\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t \r\n\t  var points = [\r\n\t    {x: startX, y: startY},\r\n\t    {x: startX + width, y: startY},\r\n\t    {x: startX + width, y: startY + height},\r\n\t    {x: startX, y: startY + height},\r\n\t    {x: startX, y: startY}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t  this.symbol = symbol\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Condition, Symbol);\r\n\t\r\n\tCondition.prototype.render = function() {\r\n\t\r\n\t  if (this.yes_direction) {\r\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n\t  }\r\n\t\r\n\t  if (this.no_direction) {\r\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n\t  }\r\n\t\r\n\t  var lineLength = this.getAttr('line-length');\r\n\t\r\n\t  if (this.bottom_symbol) {\r\n\t    var bottomPoint = this.getBottom();\r\n\t\r\n\t    if (!this.bottom_symbol.isPositioned) {\r\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n\t      this.bottom_symbol.isPositioned = true;\r\n\t\r\n\t      this.bottom_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (this.right_symbol) {\r\n\t    var rightPoint = this.getRight();\r\n\t\r\n\t    if (!this.right_symbol.isPositioned) {\r\n\t\r\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t      var self = this;\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t\r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (hasSymbolUnder) {\r\n\t          if (self.right_symbol.symbolType === 'end') return;\r\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t\r\n\t      this.right_symbol.isPositioned = true;\r\n\t\r\n\t      this.right_symbol.render();\r\n\t    }\r\n\t  }\r\n\t  \r\n\t  if (this.left_symbol) {\r\n\t    var leftPoint = this.getLeft();\r\n\t  \r\n\t    if (!this.left_symbol.isPositioned) {\r\n\t      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\r\n\t      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n\t      var self = this;\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t    \r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n\t            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t    \r\n\t        if (hasSymbolUnder) {\r\n\t          if (self.left_symbol.symbolType === 'end') return;\r\n\t          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t  \r\n\t      this.left_symbol.isPositioned = true;\r\n\t  \r\n\t      this.left_symbol.render();\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tCondition.prototype.renderLines = function() {\r\n\t  if (this.yes_symbol) {\r\n\t    this.drawLineTo(this.yes_symbol, this.yes_annotation ? this.yes_annotation : this.getAttr('yes-text'), this.yes_direction);\r\n\t  }\r\n\t\r\n\t  if (this.no_symbol) {\r\n\t    this.drawLineTo(this.no_symbol, this.no_annotation ? this.no_annotation : this.getAttr('no-text'), this.no_direction);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Condition;\r\n\n\n/***/ }),\n/* 6 */\n/*!******************************************!*\\\n  !*** ./src/flowchart.symbol.parallel.js ***!\n  \\******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Parallel(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t  this.path1_direction = 'bottom';\r\n\t  this.path2_direction = 'right';\r\n\t  this.path3_direction = 'top';\r\n\t  this.params = options.params;\r\n\t  if (options.direction_next === 'path1' && !options[options.direction_next] && options.next) {\r\n\t    options[options.direction_next] = options.next;\r\n\t  }\r\n\t  if (options.direction_next === 'path2' && !options[options.direction_next] && options.next) {\r\n\t    options[options.direction_next] = options.next;\r\n\t  }\r\n\t  if (options.direction_next === 'path3' && !options[options.direction_next] && options.next) {\r\n\t    options[options.direction_next] = options.next;\r\n\t  }\r\n\t\r\n\t  if (options.path1 && options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && !options.direction_path3) {\r\n\t    if (options.direction_path1 === 'right') {\r\n\t      this.path2_direction = 'bottom';\r\n\t      this.path1_direction = 'right';\r\n\t      this.path3_direction = 'top';\r\n\t    } else if (options.direction_path1 === 'top') {\r\n\t      this.path2_direction = 'right';\r\n\t      this.path1_direction = 'top';\r\n\t      this.path3_direction = 'bottom';\r\n\t    } else if (options.direction_path1 === 'left') {\r\n\t      this.path2_direction = 'right';\r\n\t      this.path1_direction = 'left';\r\n\t      this.path3_direction = 'bottom';\r\n\t    } else {\r\n\t      this.path2_direction = 'right';\r\n\t      this.path1_direction = 'bottom';\r\n\t      this.path3_direction = 'top';\r\n\t    }\r\n\t  } else if (options.path1 && !options.direction_path1 && options.path2 && options.direction_path2 && options.path3 && !options.direction_path3) {\r\n\t    if (options.direction_path2 === 'right') {\r\n\t      this.path1_direction = 'bottom';\r\n\t      this.path2_direction = 'right';\r\n\t      this.path3_direction = 'top';\r\n\t    } else if (options.direction_path2 === 'left') {\r\n\t      this.path1_direction = 'bottom';\r\n\t      this.path2_direction = 'left';\r\n\t      this.path3_direction = 'right';\r\n\t    } else {\r\n\t      this.path1_direction = 'right';\r\n\t      this.path2_direction = 'bottom';\r\n\t      this.path3_direction = 'top';\r\n\t    }\r\n\t  } else if (options.path1 && !options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && options.direction_path3) {\r\n\t    if (options.direction_path2 === 'right') {\r\n\t      this.path1_direction = 'bottom';\r\n\t      this.path2_direction = 'top';\r\n\t      this.path3_direction = 'right';\r\n\t    } else if (options.direction_path2 === 'left') {\r\n\t      this.path1_direction = 'bottom';\r\n\t      this.path2_direction = 'right';\r\n\t      this.path3_direction = 'left';\r\n\t    } else {\r\n\t      this.path1_direction = 'right';\r\n\t      this.path2_direction = 'bottom';\r\n\t      this.path3_direction = 'top';\r\n\t    }\r\n\t  } else {\r\n\t    this.path1_direction = options.direction_path1;\r\n\t    this.path2_direction = options.direction_path2;\r\n\t    this.path3_direction = options.direction_path3;\r\n\t  }\r\n\t\r\n\t  this.path1_direction = this.path1_direction || 'bottom';\r\n\t  this.path2_direction = this.path2_direction || 'right';\r\n\t  this.path3_direction = this.path3_direction || 'top';\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Parallel, Symbol);\r\n\t\r\n\tParallel.prototype.render = function() {\r\n\t\r\n\t  if (this.path1_direction) {\r\n\t    this[this.path1_direction + '_symbol'] = this.path1_symbol;\r\n\t  }\r\n\t\r\n\t  if (this.path2_direction) {\r\n\t    this[this.path2_direction + '_symbol'] = this.path2_symbol;\r\n\t  }\r\n\t\r\n\t  if (this.path3_direction) {\r\n\t    this[this.path3_direction + '_symbol'] = this.path3_symbol;\r\n\t  }\r\n\t\r\n\t  var lineLength = this.getAttr('line-length');\r\n\t\r\n\t  if (this.bottom_symbol) {\r\n\t    var bottomPoint = this.getBottom();\r\n\t\r\n\t    if (!this.bottom_symbol.isPositioned) {\r\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width / 2);\r\n\t      this.bottom_symbol.isPositioned = true;\r\n\t\r\n\t      this.bottom_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (this.top_symbol) {\r\n\t    var topPoint = this.getTop();\r\n\t\r\n\t    if (!this.top_symbol.isPositioned) {\r\n\t      this.top_symbol.shiftY(this.getY() - this.top_symbol.height - lineLength);\r\n\t      this.top_symbol.setX(topPoint.x + this.top_symbol.width);\r\n\t      this.top_symbol.isPositioned = true;\r\n\t\r\n\t      this.top_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var self = this;\r\n\t\r\n\t  if (this.left_symbol) {\r\n\t    var leftPoint = this.getLeft();\r\n\t\r\n\t    if (!this.left_symbol.isPositioned) {\r\n\t      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\r\n\t      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t\r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n\t            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (hasSymbolUnder) {\r\n\t          if (self.left_symbol.symbolType === 'end') return;\r\n\t          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t\r\n\t      this.left_symbol.isPositioned = true;\r\n\t\r\n\t      this.left_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (this.right_symbol) {\r\n\t    var rightPoint = this.getRight();\r\n\t\r\n\t    if (!this.right_symbol.isPositioned) {\r\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height / 2);\r\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t\r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width / 2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (hasSymbolUnder) {\r\n\t          if (self.right_symbol.symbolType === 'end') return;\r\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t\r\n\t      this.right_symbol.isPositioned = true;\r\n\t\r\n\t      this.right_symbol.render();\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tParallel.prototype.renderLines = function() {\r\n\t  if (this.path1_symbol) {\r\n\t    this.drawLineTo(this.path1_symbol, '', this.path1_direction);\r\n\t  }\r\n\t\r\n\t  if (this.path2_symbol) {\r\n\t    this.drawLineTo(this.path2_symbol, '', this.path2_direction);\r\n\t  }\r\n\t\r\n\t  if (this.path3_symbol) {\r\n\t    this.drawLineTo(this.path3_symbol, '', this.path3_direction);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Parallel;\n\n/***/ }),\n/* 7 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 16);\r\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\r\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 8);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\tvar Parallel = __webpack_require__(/*! ./flowchart.symbol.parallel */ 6);\r\n\t\r\n\tfunction FlowChart(container, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  this.paper = new Raphael(container);\r\n\t\r\n\t  this.options = defaults(options, defaultOptions);\r\n\t\r\n\t  this.symbols = [];\r\n\t  this.lines = [];\r\n\t  this.start = null;\r\n\t}\r\n\t\r\n\tFlowChart.prototype.handle = function(symbol) {\r\n\t  if (this.symbols.indexOf(symbol) <= -1) {\r\n\t    this.symbols.push(symbol);\r\n\t  }\r\n\t\r\n\t  var flowChart = this;\r\n\t\r\n\t  if (symbol instanceof(Condition)) {\r\n\t    symbol.yes = function(nextSymbol) {\r\n\t      symbol.yes_symbol = nextSymbol;\r\n\t      if(symbol.no_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t    symbol.no = function(nextSymbol) {\r\n\t      symbol.no_symbol = nextSymbol;\r\n\t      if (symbol.yes_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  } else if (symbol instanceof(Parallel)) {\r\n\t    symbol.path1 = function(nextSymbol) {\r\n\t      symbol.path1_symbol = nextSymbol;\r\n\t      if (symbol.path2_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t    symbol.path2 = function(nextSymbol) {\r\n\t      symbol.path2_symbol = nextSymbol;\r\n\t      if (symbol.path3_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t    symbol.path3 = function(nextSymbol) {\r\n\t      symbol.path3_symbol = nextSymbol;\r\n\t      if (symbol.path1_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  } else {\r\n\t    symbol.then = function(nextSymbol) {\r\n\t      symbol.next = nextSymbol;\r\n\t      symbol.pathOk = true;\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  }\r\n\t\r\n\t  return symbol;\r\n\t};\r\n\t\r\n\tFlowChart.prototype.startWith = function(symbol) {\r\n\t  this.start = symbol;\r\n\t  return this.handle(symbol);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.render = function() {\r\n\t  var maxWidth = 0,\r\n\t    maxHeight = 0,\r\n\t    i = 0,\r\n\t    len = 0,\r\n\t    maxX = 0,\r\n\t    maxY = 0,\r\n\t    minX = 0,\r\n\t    minY = 0,\r\n\t    symbol,\r\n\t    line;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    if (symbol.width > maxWidth) {\r\n\t      maxWidth = symbol.width;\r\n\t    }\r\n\t    if (symbol.height > maxHeight) {\r\n\t      maxHeight = symbol.height;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n\t  }\r\n\t\r\n\t  this.start.render();\r\n\t  //for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t  //  symbol = this.symbols[i];\r\n\t  //  symbol.render();\r\n\t  //}\r\n\t\r\n\t  var chartY = 0;\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    var symbol = this.symbols[i];\r\n\t    var bottom = symbol.getBottom();\r\n\t    if (bottom.y > chartY) chartY = bottom.y;\r\n\t  }\r\n\t\r\n\t  var endY = chartY + this.options['line-length'] + 50;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    if (symbol.symbolType === 'end') symbol.setY(endY);\r\n\t  }\r\n\t\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.renderLines();\r\n\t  }\r\n\t\r\n\t  maxX = this.maxXFromLine;\r\n\t\r\n\t  var x;\r\n\t  var y;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    var leftX = symbol.getX()\r\n\t    x = leftX + symbol.width;\r\n\t    y = symbol.getY() + symbol.height;\r\n\t    if (leftX < minX) {\r\n\t      minX = leftX;\r\n\t    }\r\n\t    if (x > maxX) {\r\n\t      maxX = x;\r\n\t    }\r\n\t    if (y > maxY) {\r\n\t      maxY = y;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\r\n\t    line = this.lines[i].getBBox();\r\n\t    x = line.x;\r\n\t    y = line.y;\r\n\t    var x2 = line.x2;\r\n\t    var y2 = line.y2;\r\n\t    if (x < minX) {\r\n\t      minX = x;\r\n\t    }\r\n\t    if (y < minY) {\r\n\t      minY = y;\r\n\t    }\r\n\t    if (x2 > maxX) {\r\n\t      maxX = x2;\r\n\t    }\r\n\t    if (y2 > maxY) {\r\n\t      maxY = y2;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var scale = this.options['scale'];\r\n\t  var lineWidth = this.options['line-width'];\r\n\t\r\n\t  if (this.minXFromSymbols < minX) minX = this.minXFromSymbols;\r\n\t\r\n\t  if (minX < 0) minX -= lineWidth;\r\n\t  if (minY < 0) minY -= lineWidth;\r\n\t\r\n\t  var width = maxX + lineWidth - minX;\r\n\t  var height = maxY + lineWidth - minY;\r\n\t\r\n\t  this.paper.setSize(width * scale, height * scale);\r\n\t  this.paper.setViewBox(minX, minY, width, height, true);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.clean = function() {\r\n\t  if (this.paper) {\r\n\t    var paperDom = this.paper.canvas;\r\n\t    paperDom.parentNode && paperDom.parentNode.removeChild(paperDom);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = FlowChart;\n\n/***/ }),\n/* 8 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\r\n\tmodule.exports = {\r\n\t  'x': 0,\r\n\t  'y': 0,\r\n\t  'line-width': 3,\r\n\t  'line-length': 50,\r\n\t  'text-margin': 10,\r\n\t  'font-size': 14,\r\n\t  'font-color': 'black',\r\n\t  // 'font': 'normal',\r\n\t  // 'font-family': 'calibri',\r\n\t  // 'font-weight': 'normal',\r\n\t  'line-color': 'black',\r\n\t  'element-color': 'black',\r\n\t  'fill': 'white',\r\n\t  'yes-text': 'yes',\r\n\t  'no-text': 'no',\r\n\t  'arrow-end': 'block',\r\n\t  'class': 'flowchart',\r\n\t  'scale': 1,\r\n\t  'symbols': {\r\n\t    'start': {},\r\n\t    'end': {},\r\n\t    'condition': {},\r\n\t    'inputoutput': {},\r\n\t    'operation': {},\r\n\t    'subroutine': {},\r\n\t    'parallel': {}\r\n\t  } //,\r\n\t  // 'flowstate' : {\r\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n\t  //   'future' : { 'fill': '#FFFF99'},\r\n\t  //   'invalid': {'fill': '#444444'}\r\n\t  // }\r\n\t};\n\n/***/ }),\n/* 9 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.indexOf) {\r\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = 0;\r\n\t    if (arguments.length > 0) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) { // shortcut for verifying if it's NaN\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    if (n >= len) {\r\n\t      return -1;\r\n\t    }\r\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t    for (; k < len; k++) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.lastIndexOf) {\r\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = len;\r\n\t    if (arguments.length > 1) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) {\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n\t    for (; k >= 0; k--) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\tif (!String.prototype.trim) {\r\n\t  String.prototype.trim = function() {\r\n\t    return this.replace(/^\\s+|\\s+$/g, '');\r\n\t  };\r\n\t}\n\n/***/ }),\n/* 10 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction End(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 10);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'End';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(End, Symbol);\r\n\t\r\n\tmodule.exports = End;\r\n\n\n/***/ }),\n/* 11 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction InputOutput(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t\r\n\t  this.text.attr({\r\n\t    x: this.textMargin * 3\r\n\t  });\r\n\t\r\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n\t  var startX = this.textMargin;\r\n\t  var startY = height/2;\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t  var points = [\r\n\t    {x: startX - this.textMargin, y: height},\r\n\t    {x: startX - this.textMargin + width, y: height},\r\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n\t    {x: startX, y: startY}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.text.attr({\r\n\t    y: symbol.getBBox().height/2\r\n\t  });\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t  this.symbol = symbol\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(InputOutput, Symbol);\r\n\t\r\n\tInputOutput.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tInputOutput.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tmodule.exports = InputOutput;\r\n\n\n/***/ }),\n/* 12 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Operation(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Operation, Symbol);\r\n\t\r\n\tmodule.exports = Operation;\r\n\n\n/***/ }),\n/* 13 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Start(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'Start';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Start, Symbol);\r\n\t\r\n\tmodule.exports = Start;\r\n\t\r\n\t// Start.prototype.render = function() {\r\n\t//   if (this.next) {\r\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\t\r\n\t//     var bottomPoint = this.getBottom();\r\n\t//     var topPoint = this.next.getTop();\r\n\t\r\n\t//     if (!this.next.isPositioned) {\r\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t//       this.next.isPositioned = true;\r\n\t\r\n\t//       this.next.render();\r\n\t//     }\r\n\t//   }\r\n\t// };\r\n\t\r\n\t// Start.prototype.renderLines = function() {\r\n\t//   if (this.next) {\r\n\t//     this.drawLineTo(this.next);\r\n\t//   }\r\n\t// };\r\n\n\n/***/ }),\n/* 14 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Subroutine(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t\r\n\t  symbol.attr({\r\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  this.text.attr({\r\n\t    'x': 2 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n\t  innerWrap.attr({\r\n\t    x: this.getAttr('text-margin'),\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\t\r\n\t  var font = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t\r\n\t  if (font) innerWrap.attr({ 'font': font });\r\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { innerWrap.attr('href', options.link); }\r\n\t  if (options.target) { innerWrap.attr('target', options.target); }\r\n\t  this.group.push(innerWrap);\r\n\t  innerWrap.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Subroutine, Symbol);\r\n\t\r\n\tmodule.exports = Subroutine;\r\n\n\n/***/ }),\n/* 15 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\r\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\r\n\t\r\n\t\t(function( $ ) {\r\n\t\t\tfunction paramFit(needle, haystack) {\r\n\t\t\t\treturn needle == haystack ||\r\n\t\t\t\t( Array.isArray(haystack) && (haystack.includes(needle) || haystack.includes(Number(needle)) ))\r\n\t\t\t}\r\n\t\t\tvar methods = {\r\n\t\t\t\tinit : function(options) {\r\n\t\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\t\tthis.chart = parse($this.text());\r\n\t\t\t\t\t\t$this.html('');\r\n\t\t\t\t\t\tthis.chart.drawSVG(this, options);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tsetFlowStateByParam : function(param, paramValue, newFlowState) {\r\n\t\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\t\tvar chart = this.chart;\r\n\t\r\n\t\t\t\t\t\t// @todo this should be part of Symbol API\r\n\t\t\t\t\t\tvar nextSymbolKeys = ['next', 'yes', 'no', 'path1', 'path2', 'path3'];\r\n\t\r\n\t\t\t\t\t\tfor (var property in chart.symbols) {\r\n\t\t\t\t\t\t\tif (chart.symbols.hasOwnProperty(property)) {\r\n\t\t\t\t\t\t\t\tvar symbol = chart.symbols[property];\r\n\t\t\t\t\t\t\t\tvar val = symbol.params[param];\r\n\t\t\t\t\t\t\t\tif (paramFit(val, paramValue)) {\r\n\t\t\t\t\t\t\t\t\tsymbol.flowstate = newFlowState;\r\n\t\t\t\t\t\t\t\t\tfor (var nski = 0; nski < nextSymbolKeys.length; nski++) {\r\n\t\t\t\t\t\t\t\t\t\tvar nextSymbolKey = nextSymbolKeys[nski];\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey] &&\r\n\t\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey]['params'] &&\r\n\t\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey]['params'][param] &&\r\n\t\t\t\t\t\t\t\t\t\t\tparamFit(symbol[nextSymbolKey]['params'][param], paramValue)\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tsymbol.lineStyle[symbol[nextSymbolKey]['key']] = {stroke: chart.options()['flowstate'][newFlowState]['fill']};\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tchart.clean();\r\n\t\t\t\t\t\tchart.drawSVG(this);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tclearFlowState: function () {\r\n\t\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\t\tvar chart = this.chart;\r\n\t\r\n\t\t\t\t\t\tfor (var property in chart.symbols) {\r\n\t\t\t\t\t\t\tif (chart.symbols.hasOwnProperty(property)) {\r\n\t\t\t\t\t\t\t\tvar node = chart.symbols[property];\r\n\t\t\t\t\t\t\t\tnode.flowstate = '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tchart.clean();\r\n\t\t\t\t\t\tchart.drawSVG(this);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t$.fn.flowChart = function(methodOrOptions) {\r\n\t\t\t\tif ( methods[methodOrOptions] ) {\r\n\t\t\t\t\treturn methods[ methodOrOptions ].apply( this, Array.prototype.slice.call( arguments, 1 ));\r\n\t\t\t\t} else if ( typeof methodOrOptions === 'object' || ! methodOrOptions ) {\r\n\t\t\t\t\t// Default to \"init\"\r\n\t\t\t\t\treturn methods.init.apply( this, arguments );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.error( 'Method ' +  methodOrOptions + ' does not exist on jQuery.flowChart' );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t})(jQuery); // eslint-disable-line\r\n\t}\r\n\n\n/***/ }),\n/* 16 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 007e8fc83162d0c06262","require('./src/flowchart.shim');\r\nvar parse = require('./src/flowchart.parse');\r\nrequire('./src/jquery-plugin');\r\n\r\nvar FlowChart = {\r\n\tparse: parse\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.flowchart = FlowChart;\r\n}\r\n\r\nmodule.exports = FlowChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\r\n  if (!options || typeof options === 'function') {\r\n    return defaultOptions;\r\n  }\r\n\r\n  var merged = {};\r\n  for (var attrname in defaultOptions) {\r\n    merged[attrname] = defaultOptions[attrname];\r\n  }\r\n\r\n  for (attrname in options) {\r\n    if (options[attrname]) {\r\n      if (typeof merged[attrname] === 'object') {\r\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n      } else {\r\n        merged[attrname] = options[attrname];\r\n      }\r\n    }\r\n  }\r\n  return merged;\r\n}\r\n\r\nfunction _inherits(ctor, superCtor) {\r\n  if (typeof(Object.create) === 'function') {\r\n    // implementation from standard node.js 'util' module\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  } else {\r\n    // old school shim for old browsers\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  }\r\n}\r\n\r\n// move dependent functions to a container so that\r\n// they can be overriden easier in no jquery environment (node.js)\r\nmodule.exports = {\r\n  defaults: _defaults,\r\n  inherits: _inherits\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\r\nvar drawLine = drawAPI.drawLine;\r\nvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\r\nfunction Symbol(chart, options, symbol) {\r\n  this.chart = chart;\r\n  this.group = this.chart.paper.set();\r\n  this.symbol = symbol;\r\n  this.connectedTo = [];\r\n  this.symbolType = options.symbolType;\r\n  this.flowstate = (options.flowstate || 'future');\r\n  this.lineStyle = (options.lineStyle || {});\r\n  this.key = (options.key || '');\r\n  this.leftLines = [];\r\n  this.rightLines = [];\r\n  this.topLines = [];\r\n  this.bottomLines = [];\r\n  this.params = options.params;\r\n\r\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\r\n  this.text = this.chart.paper.text(0, 0, options.text);\r\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n  if (options.key) { this.text.node.id = options.key + 't'; }\r\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\r\n  this.text.attr({\r\n    'text-anchor': 'start',\r\n    'x'          : this.getAttr('text-margin'),\r\n    'fill'       : this.getAttr('font-color'),\r\n    'font-size'  : this.getAttr('font-size')\r\n  });\r\n\r\n  var font  = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n\r\n  if (font) this.text.attr({ 'font': font });\r\n  if (fontF) this.text.attr({ 'font-family': fontF });\r\n  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { this.text.attr('href', options.link); }\r\n  \r\n  //ndrqu Add click function with event and options params\r\n  if (options.function) { \r\n    this.text.attr({ 'cursor' : 'pointer' });\r\n\r\n    this.text.node.addEventListener(\"click\", function(evt) {\r\n        window[options.function](evt,options);\r\n    }, false);\r\n  }\r\n\r\n  if (options.target) { this.text.attr('target', options.target); }\r\n\r\n  var maxWidth = this.getAttr('maxWidth');\r\n  if (maxWidth) {\r\n    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n    var words = options.text.split(' ');\r\n    var tempText = \"\";\r\n    for (var i=0, ii=words.length; i<ii; i++) {\r\n      var word = words[i];\r\n      this.text.attr(\"text\", tempText + \" \" + word);\r\n      if (this.text.getBBox().width > maxWidth) {\r\n        tempText += \"\\n\" + word;\r\n      } else {\r\n        tempText += \" \" + word;\r\n      }\r\n    }\r\n    this.text.attr(\"text\", tempText.substring(1));\r\n  }\r\n\r\n  this.group.push(this.text);\r\n\r\n  if (symbol) {\r\n    var tmpMargin = this.getAttr('text-margin');\r\n\r\n    symbol.attr({\r\n      'fill' : this.getAttr('fill'),\r\n      'stroke' : this.getAttr('element-color'),\r\n      'stroke-width' : this.getAttr('line-width'),\r\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\r\n      'height' : this.text.getBBox().height + 2 * tmpMargin\r\n    });\r\n\r\n    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n    if (options.link) { symbol.attr('href', options.link); }\r\n    if (options.target) { symbol.attr('target', options.target); }\r\n\r\n    //ndrqu Add click function with event and options params\r\n    if (options.function) { \r\n        symbol.node.addEventListener(\"click\", function(evt) {\r\n          window[options.function](evt,options);\r\n        }, false);\r\n      symbol.attr({ 'cursor' : 'pointer' });\r\n    }\r\n    if (options.key) { symbol.node.id = options.key; }\r\n\r\n    this.group.push(symbol);\r\n    symbol.insertBefore(this.text);\r\n\r\n    this.text.attr({\r\n      'y': symbol.getBBox().height/2\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n}\r\n\r\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\nSymbol.prototype.getAttr = function(attName) {\r\n  if (!this.chart) {\r\n    return undefined;\r\n  }\r\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n  var opt1;\r\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n  }\r\n  return (opt1 || opt2 || opt3);\r\n};\r\n\r\nSymbol.prototype.initialize = function() {\r\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\r\n  this.width = this.group.getBBox().width;\r\n  this.height = this.group.getBBox().height;\r\n};\r\n\r\nSymbol.prototype.getCenter = function() {\r\n  return {x: this.getX() + this.width/2,\r\n          y: this.getY() + this.height/2};\r\n};\r\n\r\nSymbol.prototype.getX = function() {\r\n  return this.group.getBBox().x;\r\n};\r\n\r\nSymbol.prototype.getY = function() {\r\n  return this.group.getBBox().y;\r\n};\r\n\r\nSymbol.prototype.shiftX = function(x) {\r\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.setX = function(x) {\r\n  this.group.transform('t' + x + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.shiftY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n};\r\n\r\nSymbol.prototype.setY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + y);\r\n};\r\n\r\nSymbol.prototype.getTop = function() {\r\n  var y = this.getY();\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getBottom = function() {\r\n  var y = this.getY() + this.height;\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX();\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.render = function() {\r\n  if (this.next) {\r\n\r\n    var self = this;\r\n    var lineLength = this.getAttr('line-length');\r\n\r\n    if (this.next_direction === 'right') {\r\n\r\n      var rightPoint = this.getRight();\r\n\r\n      if (!this.next.isPositioned) {\r\n        this.next.setY(rightPoint.y - this.next.height/2);\r\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n        (function shift() {\r\n          var hasSymbolUnder = false;\r\n          var symb;\r\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n            symb = self.chart.symbols[i];\r\n\r\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (hasSymbolUnder) {\r\n            if (self.next.symbolType === 'end') return;\r\n            self.next.setX(symb.getX() + symb.width + lineLength);\r\n            shift();\r\n          }\r\n        })();\r\n\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    } else if (this.next_direction === 'left') {\r\n\r\n      var leftPoint = this.getLeft();\r\n\r\n      if (!this.next.isPositioned) {\r\n        this.next.setY(leftPoint.y - this.next.height/2);\r\n        this.next.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n\r\n        (function shift() {\r\n          var hasSymbolUnder = false;\r\n          var symb;\r\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n            symb = self.chart.symbols[i];\r\n\r\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (hasSymbolUnder) {\r\n            if (self.next.symbolType === 'end') return;\r\n            self.next.setX(symb.getX() + symb.width + lineLength);\r\n            shift();\r\n          }\r\n        })();\r\n\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    } else {\r\n      var bottomPoint = this.getBottom();\r\n\r\n      if (!this.next.isPositioned) {\r\n        this.next.shiftY(this.getY() + this.height + lineLength);\r\n        this.next.setX(bottomPoint.x - this.next.width/2);\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.renderLines = function() {\r\n  if (this.next) {\r\n    if (this.next_direction) {\r\n      this.drawLineTo(this.next, this.getAttr('arrow-text') || '', this.next_direction);\r\n    } else {\r\n      this.drawLineTo(this.next, this.getAttr('arrow-text') || '');\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n  if (this.connectedTo.indexOf(symbol) < 0) {\r\n    this.connectedTo.push(symbol);\r\n  }\r\n\r\n  var x = this.getCenter().x,\r\n      y = this.getCenter().y,\r\n      right = this.getRight(),\r\n      bottom = this.getBottom(),\r\n      top = this.getTop(),\r\n      left = this.getLeft();\r\n\r\n  var symbolX = symbol.getCenter().x,\r\n      symbolY = symbol.getCenter().y,\r\n      symbolTop = symbol.getTop(),\r\n      symbolRight = symbol.getRight(),\r\n      symbolLeft = symbol.getLeft();\r\n\r\n  var isOnSameColumn = x === symbolX,\r\n      isOnSameLine = y === symbolY,\r\n      isUnder = y < symbolY,\r\n      isUpper = y > symbolY || this === symbol,\r\n      isLeft = x > symbolX,\r\n      isRight = x < symbolX;\r\n\r\n  var maxX = 0,\r\n      line,\r\n      yOffset,\r\n      lineLength = this.getAttr('line-length'),\r\n      lineWith = this.getAttr('line-width');\r\n\r\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n    if (symbol.topLines.length === 0 && this.bottomLines.length === 0) {\r\n      line = drawLine(this.chart, bottom, symbolTop, text);\r\n    } else {\r\n      yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: symbolTop.x, y: symbolTop.y - yOffset},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    }\r\n    this.bottomLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n    if (symbol.leftLines.length === 0 && this.rightLines.length === 0) {\r\n      line = drawLine(this.chart, right, symbolLeft, text);\r\n    } else {\r\n      yOffset = Math.max(symbol.leftLines.length, this.rightLines.length) * 10;\r\n      line = drawLine(this.chart, right, [\r\n        {x: right.x, y: right.y - yOffset},\r\n        {x: right.x, y: symbolLeft.y - yOffset},\r\n        {x: symbolLeft.x, y: symbolLeft.y - yOffset},\r\n        {x: symbolLeft.x, y: symbolLeft.y}\r\n      ], text);\r\n    }\r\n    this.rightLines.push(line);\r\n    symbol.leftLines.push(line);\r\n    this.rightStart = true;\r\n    symbol.leftEnd = true;\r\n    maxX = symbolLeft.x;\r\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n    if (symbol.rightLines.length === 0 && this.leftLines.length === 0) {\r\n      line = drawLine(this.chart, left, symbolRight, text);\r\n    } else {\r\n      yOffset = Math.max(symbol.rightLines.length, this.leftLines.length) * 10;\r\n      line = drawLine(this.chart, right, [\r\n        {x: right.x, y: right.y - yOffset},\r\n        {x: right.x, y: symbolRight.y - yOffset},\r\n        {x: symbolRight.x, y: symbolRight.y - yOffset},\r\n        {x: symbolRight.x, y: symbolRight.y}\r\n      ], text);\r\n    }\r\n    this.leftLines.push(line);\r\n    symbol.rightLines.push(line);\r\n    this.leftStart = true;\r\n    symbol.rightEnd = true;\r\n    maxX = symbolRight.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y - yOffset},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y - yOffset},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n    if (this.leftEnd && isUpper) {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2 - yOffset},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    } else {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    }\r\n    this.bottomLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((!origin || origin === 'bottom') && isRight && isUnder) {\r\n    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x;\r\n    if (symbolTop.x > maxX) maxX = symbolTop.x;\r\n  } else if ((!origin || origin === 'bottom') && isRight) {\r\n    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2 - yOffset},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((origin && origin === 'right') && isLeft) {\r\n    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'right') && isRight) {\r\n    yOffset = Math.max(symbol.topLines.length, this.rightLines.length) * 10;\r\n    line = drawLine(this.chart, right, [\r\n      {x: symbolTop.x, y: right.y - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - yOffset}\r\n    ], text);\r\n    this.rightLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n    yOffset = Math.max(symbol.topLines.length, this.bottomLines.length) * 10;\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2 - yOffset},\r\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2 - yOffset},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + lineLength/2;\r\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n    var diffX = left.x - lineLength/2;\r\n    if (symbolLeft.x < left.x) {\r\n      diffX = symbolLeft.x - lineLength/2;\r\n    }\r\n    yOffset = Math.max(symbol.topLines.length, this.leftLines.length) * 10;\r\n    line = drawLine(this.chart, left, [\r\n      {x: diffX, y: left.y - yOffset},\r\n      {x: diffX, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  } else if ((origin === 'left')) {\r\n    yOffset = Math.max(symbol.topLines.length, this.leftLines.length) * 10;\r\n    line = drawLine(this.chart, left, [\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: left.y},\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  } else if ((origin === 'top')) {\r\n    yOffset = Math.max(symbol.topLines.length, this.topLines.length) * 10;\r\n    line = drawLine(this.chart, top, [\r\n      {x: top.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2 - yOffset},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.topLines.push(line);\r\n    symbol.topLines.push(line);\r\n    this.topStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = top.x;\r\n  }\r\n\r\n  //update line style\r\n  if (this.lineStyle[symbol.key] && line){\r\n    line.attr(this.lineStyle[symbol.key]);\r\n  }\r\n\r\n  if (line) {\r\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n      var otherLine = this.chart.lines[l];\r\n\r\n      var ePath = otherLine.attr('path'),\r\n          lPath = line.attr('path');\r\n\r\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n        var newPath = [];\r\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\r\n        var line1_from_x = newPath[0][1];\r\n        var line1_from_y = newPath[0][2];\r\n        var line1_to_x = newPath[1][1];\r\n        var line1_to_y = newPath[1][2];\r\n\r\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n          var newLinePath = [];\r\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\r\n          var line2_from_x = newLinePath[0][1];\r\n          var line2_from_y = newLinePath[0][2];\r\n          var line2_to_x = newLinePath[1][1];\r\n          var line2_to_y = newLinePath[1][2];\r\n\r\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n          if (res.onLine1 && res.onLine2) {\r\n\r\n            var newSegment;\r\n            if (line2_from_y === line2_to_y) {\r\n              if (line2_from_x > line2_to_x) {\r\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            } else {\r\n              if (line2_from_y > line2_to_y) {\r\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            }\r\n\r\n            lP += 2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.chart.lines.push(line);\r\n    if (this.chart.minXFromSymbols === undefined || this.chart.minXFromSymbols > left.x) {\r\n      this.chart.minXFromSymbols = left.x;\r\n    }\r\n  }\r\n\r\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n    this.chart.maxXFromLine = maxX;\r\n  }\r\n};\r\n\r\nmodule.exports = Symbol;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\r\n  var i, len;\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [location.x, location.y];\r\n  for (i = 0, len = points.length; i < len; i++) {\r\n    pathValues.push(points[i].x);\r\n    pathValues.push(points[i].y);\r\n  }\r\n  var symbol = chart.paper.path(path, pathValues);\r\n  symbol.attr('stroke', chart.options['element-color']);\r\n  symbol.attr('stroke-width', chart.options['line-width']);\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) symbol.attr({ 'font': font });\r\n  if (fontF) symbol.attr({ 'font-family': fontF });\r\n  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\r\n  return symbol;\r\n}\r\n\r\nfunction drawLine(chart, from, to, text) {\r\n  var i, len;\r\n\r\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n    to = [to];\r\n  }\r\n\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [from.x, from.y];\r\n  for (i = 0, len = to.length; i < len; i++) {\r\n    pathValues.push(to[i].x);\r\n    pathValues.push(to[i].y);\r\n  }\r\n\r\n  var line = chart.paper.path(path, pathValues);\r\n  line.attr({\r\n    stroke: chart.options['line-color'],\r\n    'stroke-width': chart.options['line-width'],\r\n    'arrow-end': chart.options['arrow-end']\r\n  });\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) line.attr({ 'font': font });\r\n  if (fontF) line.attr({ 'font-family': fontF });\r\n  if (fontW) line.attr({ 'font-weight': fontW });\r\n\r\n  if (text) {\r\n\r\n    var centerText = false;\r\n\r\n    var textPath = chart.paper.text(0, 0, text);\r\n    var textAnchor = 'start';\r\n\r\n    var isHorizontal = false;\r\n    var firstTo = to[0];\r\n\r\n    if (from.y === firstTo.y) {\r\n      isHorizontal = true;\r\n    }\r\n\r\n    var x = 0,\r\n        y = 0;\r\n\r\n    if (centerText) {\r\n      if (from.x > firstTo.x) {\r\n        x = from.x - (from.x - firstTo.x)/2;\r\n      } else {\r\n        x = firstTo.x - (firstTo.x - from.x)/2;\r\n      }\r\n\r\n      if (from.y > firstTo.y) {\r\n        y = from.y - (from.y - firstTo.y)/2;\r\n      } else {\r\n        y = firstTo.y - (firstTo.y - from.y)/2;\r\n      }\r\n\r\n      if (isHorizontal) {\r\n        x -= textPath.getBBox().width/2;\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin'];\r\n        y -= textPath.getBBox().height/2;\r\n      }\r\n    } else {\r\n      x = from.x;\r\n      y = from.y;\r\n\r\n      if (isHorizontal) {\r\n        if (from.x > firstTo.x) {\r\n          x -= chart.options['text-margin']/2;\r\n          textAnchor = 'end';\r\n        } else {\r\n          x += chart.options['text-margin']/2;\r\n        }\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin']/2;\r\n        y += chart.options['text-margin'];\r\n        if (from.y > firstTo.y) {\r\n          y -= chart.options['text-margin']*2;\r\n        }\r\n      }\r\n    }\r\n\r\n    textPath.attr({\r\n      'text-anchor': textAnchor,\r\n      'font-size': chart.options['font-size'],\r\n      'fill': chart.options['font-color'],\r\n      x: x,\r\n      y: y\r\n    });\r\n\r\n    if (font) textPath.attr({ 'font': font });\r\n    if (fontF) textPath.attr({ 'font-family': fontF });\r\n    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n  }\r\n\r\n  return line;\r\n}\r\n\r\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n  var denominator, a, b, numerator1, numerator2, result = {\r\n    x: null,\r\n    y: null,\r\n    onLine1: false,\r\n    onLine2: false\r\n  };\r\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n  if (denominator === 0) {\r\n    return result;\r\n  }\r\n  a = line1StartY - line2StartY;\r\n  b = line1StartX - line2StartX;\r\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n  a = numerator1 / denominator;\r\n  b = numerator2 / denominator;\r\n\r\n  // if we cast these lines infinitely in both directions, they intersect here:\r\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n  /*\r\n  // it is worth noting that this should be the same as:\r\n  x = line2StartX + (b * (line2EndX - line2StartX));\r\n  y = line2StartX + (b * (line2EndY - line2StartY));\r\n  */\r\n  // if line1 is a segment and line2 is infinite, they intersect if:\r\n  if (a > 0 && a < 1) {\r\n    result.onLine1 = true;\r\n  }\r\n  // if line2 is a segment and line1 is infinite, they intersect if:\r\n  if (b > 0 && b < 1) {\r\n    result.onLine2 = true;\r\n  }\r\n  // if line1 and line2 are segments, they intersect if both of the above are true\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n\tdrawPath: drawPath,\r\n\tdrawLine: drawLine,\r\n\tcheckLineIntersection: checkLineIntersection\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\r\nvar Start = require('./flowchart.symbol.start');\r\nvar End = require('./flowchart.symbol.end');\r\nvar Operation = require('./flowchart.symbol.operation');\r\nvar InputOutput = require('./flowchart.symbol.inputoutput');\r\nvar Subroutine = require('./flowchart.symbol.subroutine');\r\nvar Condition = require('./flowchart.symbol.condition');\r\nvar Parallel = require('./flowchart.symbol.parallel');\r\n\r\nfunction parse(input) {\r\n  input = input || '';\r\n  input = input.trim();\r\n\r\n  var chart = {\r\n    symbols: {},\r\n    start: null,\r\n    drawSVG: function(container, options) {\r\n      var self = this;\r\n\r\n      if (this.diagram) {\r\n        this.diagram.clean();\r\n      }\r\n\r\n      var diagram = new FlowChart(container, options);\r\n      this.diagram = diagram;\r\n      var dispSymbols = {};\r\n\r\n      function getDisplaySymbol(s) {\r\n        if (dispSymbols[s.key]) {\r\n          return dispSymbols[s.key];\r\n        }\r\n\r\n        switch (s.symbolType) {\r\n          case 'start':\r\n            dispSymbols[s.key] = new Start(diagram, s);\r\n            break;\r\n          case 'end':\r\n            dispSymbols[s.key] = new End(diagram, s);\r\n            break;\r\n          case 'operation':\r\n            dispSymbols[s.key] = new Operation(diagram, s);\r\n            break;\r\n          case 'inputoutput':\r\n            dispSymbols[s.key] = new InputOutput(diagram, s);\r\n            break;\r\n          case 'subroutine':\r\n            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n            break;\r\n          case 'condition':\r\n            dispSymbols[s.key] = new Condition(diagram, s);\r\n            break;\r\n          case 'parallel':\r\n            dispSymbols[s.key] = new Parallel(diagram, s);\r\n            break;\r\n          default:\r\n            return new Error('Wrong symbol type!');\r\n        }\r\n\r\n        return dispSymbols[s.key];\r\n      }\r\n\r\n      (function constructChart(s, prevDisp, prev) {\r\n        var dispSymb = getDisplaySymbol(s);\r\n\r\n        if (self.start === s) {\r\n          diagram.startWith(dispSymb);\r\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n          if (prevDisp instanceof(Condition)) {\r\n            if (prev.yes === s) {\r\n              prevDisp.yes(dispSymb);\r\n            }\r\n            if (prev.no === s) {\r\n              prevDisp.no(dispSymb);\r\n            }\r\n          } else if (prevDisp instanceof(Parallel)) {\r\n            if (prev.path1 === s) {\r\n              prevDisp.path1(dispSymb);\r\n            }\r\n            if (prev.path2 === s) {\r\n              prevDisp.path2(dispSymb);\r\n            }\r\n            if (prev.path3 === s) {\r\n              prevDisp.path3(dispSymb);\r\n            }\r\n          } else {\r\n            prevDisp.then(dispSymb);\r\n          }\r\n        }\r\n\r\n        if (dispSymb.pathOk) {\r\n          return dispSymb;\r\n        }\r\n\r\n        if (dispSymb instanceof(Condition)) {\r\n          if (s.yes) {\r\n            constructChart(s.yes, dispSymb, s);\r\n          }\r\n          if (s.no) {\r\n            constructChart(s.no, dispSymb, s);\r\n          }\r\n        } else if (dispSymb instanceof(Parallel)) {\r\n          if (s.path1) {\r\n            constructChart(s.path1, dispSymb, s);\r\n          }\r\n          if (s.path2) {\r\n            constructChart(s.path2, dispSymb, s);\r\n          }\r\n          if (s.path3) {\r\n            constructChart(s.path3, dispSymb, s);\r\n          }\r\n        } else if (s.next) {\r\n          constructChart(s.next, dispSymb, s);\r\n        }\r\n\r\n        return dispSymb;\r\n      })(this.start);\r\n\r\n      diagram.render();\r\n    },\r\n    clean: function() {\r\n      this.diagram.clean();\r\n    },\r\n    options: function() {\r\n      return this.diagram.options;\r\n    }\r\n  };\r\n\r\n  var lines = [];\r\n  var prevBreak = 0;\r\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n      var line0 = input.substring(prevBreak, i0);\r\n      prevBreak = i0 + 1;\r\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n    }\r\n  }\r\n\r\n  if (prevBreak < input.length) {\r\n    lines.push(input.substr(prevBreak));\r\n  }\r\n\r\n  for (var l = 1, len = lines.length; l < len;) {\r\n    var currentLine = lines[l];\r\n\r\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n      lines[l - 1] += '\\n' + currentLine;\r\n      lines.splice(l, 1);\r\n      len--;\r\n    } else {\r\n      l++;\r\n    }\r\n  }\r\n\r\n  function getStyle(s){\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return s.substring(startIndex,endIndex);\r\n    }\r\n    return '{}';\r\n  }\r\n\r\n  function getSymbValue(s){\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return s.substring(startIndex,endIndex);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function getSymbol(s) {\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return chart.symbols[s.substring(0, startIndex - 1)];\r\n    }\r\n    return chart.symbols[s];\r\n  }\r\n\r\n  function getNextPath(s) {\r\n    var next = 'next';\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      next = flowSymb.substring(startIndex, endIndex);\r\n      if (next.indexOf(',') < 0) {\r\n        if (next !== 'yes' && next !== 'no') {\r\n          next = 'next, ' + next;\r\n        }\r\n      }\r\n    }\r\n    return next;\r\n  }\r\n  \r\n  function getAnnotation(s) {\r\n\tvar startIndex = s.indexOf(\"(\") + 1, endIndex = s.indexOf(\")\");\r\n\tvar tmp = s.substring(startIndex, endIndex);\r\n\tif(tmp.indexOf(\",\") > 0) { tmp = tmp.substring(0, tmp.indexOf(\",\")); }\r\n\tvar tmp_split = tmp.split(\"@\");\r\n\tif(tmp_split.length > 1)\r\n\t\treturn startIndex >= 0 && endIndex >= 0 ? tmp_split[1] : \"\";\r\n  }\r\n\r\n  while (lines.length > 0) {\r\n    var line = lines.splice(0, 1)[0].trim();\r\n\r\n    if (line.indexOf('=>') >= 0) {\r\n      // definition\r\n      var parts = line.split('=>');\r\n      var symbol = {\r\n        key: parts[0].replace(/\\(.*\\)/, ''),\r\n        symbolType: parts[1],\r\n        text: null,\r\n        link: null,\r\n        target: null,\r\n        flowstate: null,\r\n        function: null,\r\n        lineStyle: {},\r\n        params: {}\r\n      };\r\n\r\n      //parse parameters\r\n      var params = parts[0].match(/\\((.*)\\)/);\r\n      if (params && params.length > 1){\r\n        var entries = params[1].split(',');\r\n        for(var i = 0; i < entries.length; i++) {\r\n          var entry = entries[i].split('=');\r\n          if (entry.length == 2) {\r\n            symbol.params[entry[0]] = entry[1];\r\n          }\r\n        }\r\n      }\r\n\r\n      var sub;\r\n\r\n      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n        sub = symbol.symbolType.split(': ');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.text = sub.join(': ');\r\n      }\r\n\r\n      if (symbol.text && symbol.text.indexOf(':$') >= 0) {\r\n        sub = symbol.text.split(':$');\r\n        symbol.text = sub.shift();\r\n        symbol.function = sub.join(':$');\r\n      } else if (symbol.symbolType.indexOf(':$') >= 0) {\r\n        sub = symbol.symbolType.split(':$');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.function = sub.join(':$');\r\n      } else if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n        sub = symbol.text.split(':>');\r\n        symbol.text = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n        sub = symbol.symbolType.split(':>');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      }\r\n\r\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n      }\r\n\r\n      /* adding support for links */\r\n      if (symbol.link) {\r\n        var startIndex = symbol.link.indexOf('[') + 1;\r\n        var endIndex = symbol.link.indexOf(']');\r\n        if (startIndex >= 0 && endIndex >= 0) {\r\n          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n        }\r\n      }\r\n      /* end of link support */\r\n\r\n      /* adding support for flowstates */\r\n      if (symbol.text) {\r\n        if (symbol.text.indexOf('|') >= 0) {\r\n          var txtAndState = symbol.text.split('|');\r\n          symbol.flowstate = txtAndState.pop().trim();\r\n          symbol.text = txtAndState.join('|');\r\n        }\r\n      }\r\n      /* end of flowstate support */\r\n\r\n      chart.symbols[symbol.key] = symbol;\r\n\r\n    } else if (line.indexOf('->') >= 0) {\r\n      var ann = getAnnotation(line);\r\n      if (ann) {\r\n        line = line.replace('@' + ann, ''); \r\n      }\r\n      // flow\r\n      var flowSymbols = line.split('->');\r\n      for (var iS = 0, lenS = flowSymbols.length; iS < lenS; iS++) {\r\n        var flowSymb = flowSymbols[iS];\r\n        var symbVal = getSymbValue(flowSymb);\r\n\r\n        if (symbVal === 'true' || symbVal === 'false') {\r\n          // map true or false to yes or no respectively\r\n          flowSymb = flowSymb.replace('true', 'yes');\r\n          flowSymb = flowSymb.replace('false', 'no');\r\n        }\r\n        \r\n        var next = getNextPath(flowSymb);\r\n        var realSymb = getSymbol(flowSymb);\r\n\r\n        var direction = null;\r\n        if (next.indexOf(',') >= 0) {\r\n          var condOpt = next.split(',');\r\n          next = condOpt[0];\r\n          direction = condOpt[1].trim();\r\n        }\r\n\r\n        if (ann) {\r\n          if (next == \"yes\" || next == \"true\")\r\n            realSymb.yes_annotation = ann;\r\n          else\r\n            realSymb.no_annotation = ann;\r\n          ann = null;\r\n        }\r\n\r\n        if (!chart.start) {\r\n          chart.start = realSymb;\r\n        }\r\n\r\n        if (iS + 1 < lenS) {\r\n          var nextSymb = flowSymbols[iS + 1];\r\n          realSymb[next] = getSymbol(nextSymb);\r\n          realSymb['direction_' + next] = direction;\r\n          direction = null;\r\n        }\r\n      }\r\n    } else if (line.indexOf('@>') >= 0) {\r\n\r\n      // line style\r\n      var lineStyleSymbols = line.split('@>');\r\n      for (var iSS = 0, lenSS = lineStyleSymbols.length; iSS < lenSS; iSS++) {\r\n        if ((iSS + 1) !== lenSS) {\r\n          var curSymb = getSymbol(lineStyleSymbols[iSS]);\r\n          var nextSymbol = getSymbol(lineStyleSymbols[iSS+1]);\r\n\r\n          curSymb['lineStyle'][nextSymbol.key] = JSON.parse(getStyle(lineStyleSymbols[iSS + 1]));\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return chart;\r\n}\r\n\r\nmodule.exports = parse;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction Condition(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.yes_annotation = options.yes_annotation;\r\n  this.no_annotation = options.no_annotation;\r\n  this.textMargin = this.getAttr('text-margin');\r\n  this.yes_direction = options.direction_yes;\r\n  this.no_direction = options.direction_no;\r\n  if (!this.no_direction && this.yes_direction === 'right') {\r\n    this.no_direction = 'bottom';\r\n  } else if (!this.yes_direction && this.no_direction === 'bottom') {\r\n    this.yes_direction = 'right'\r\n  }\r\n  this.yes_direction = this.yes_direction || 'bottom';\r\n  this.no_direction = this.no_direction || 'right';\r\n\r\n  var width = 200;\r\n  var height = 100;\r\n  var startX = 0;\r\n  var startY = 0;\r\n\r\n  this.text.attr({\r\n    x: 100,\r\n    y: 50,\r\n    'text-anchor':'middle',\r\n    'dominant-baseline': 'middle'\r\n  });\r\n\r\n  var start = {x: startX, y: startY};\r\n \r\n  var points = [\r\n    {x: startX, y: startY},\r\n    {x: startX + width, y: startY},\r\n    {x: startX + width, y: startY + height},\r\n    {x: startX, y: startY + height},\r\n    {x: startX, y: startY}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n  this.symbol = symbol\r\n\r\n  this.initialize();\r\n}\r\ninherits(Condition, Symbol);\r\n\r\nCondition.prototype.render = function() {\r\n\r\n  if (this.yes_direction) {\r\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n  }\r\n\r\n  if (this.no_direction) {\r\n    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n  }\r\n\r\n  var lineLength = this.getAttr('line-length');\r\n\r\n  if (this.bottom_symbol) {\r\n    var bottomPoint = this.getBottom();\r\n\r\n    if (!this.bottom_symbol.isPositioned) {\r\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n      this.bottom_symbol.isPositioned = true;\r\n\r\n      this.bottom_symbol.render();\r\n    }\r\n  }\r\n\r\n  if (this.right_symbol) {\r\n    var rightPoint = this.getRight();\r\n\r\n    if (!this.right_symbol.isPositioned) {\r\n\r\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n      var self = this;\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n\r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasSymbolUnder) {\r\n          if (self.right_symbol.symbolType === 'end') return;\r\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n\r\n      this.right_symbol.isPositioned = true;\r\n\r\n      this.right_symbol.render();\r\n    }\r\n  }\r\n  \r\n  if (this.left_symbol) {\r\n    var leftPoint = this.getLeft();\r\n  \r\n    if (!this.left_symbol.isPositioned) {\r\n      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\r\n      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n      var self = this;\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n    \r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n    \r\n        if (hasSymbolUnder) {\r\n          if (self.left_symbol.symbolType === 'end') return;\r\n          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n  \r\n      this.left_symbol.isPositioned = true;\r\n  \r\n      this.left_symbol.render();\r\n    }\r\n  }\r\n};\r\n\r\nCondition.prototype.renderLines = function() {\r\n  if (this.yes_symbol) {\r\n    this.drawLineTo(this.yes_symbol, this.yes_annotation ? this.yes_annotation : this.getAttr('yes-text'), this.yes_direction);\r\n  }\r\n\r\n  if (this.no_symbol) {\r\n    this.drawLineTo(this.no_symbol, this.no_annotation ? this.no_annotation : this.getAttr('no-text'), this.no_direction);\r\n  }\r\n};\r\n\r\nmodule.exports = Condition;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Parallel(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n  this.textMargin = this.getAttr('text-margin');\r\n  this.path1_direction = 'bottom';\r\n  this.path2_direction = 'right';\r\n  this.path3_direction = 'top';\r\n  this.params = options.params;\r\n  if (options.direction_next === 'path1' && !options[options.direction_next] && options.next) {\r\n    options[options.direction_next] = options.next;\r\n  }\r\n  if (options.direction_next === 'path2' && !options[options.direction_next] && options.next) {\r\n    options[options.direction_next] = options.next;\r\n  }\r\n  if (options.direction_next === 'path3' && !options[options.direction_next] && options.next) {\r\n    options[options.direction_next] = options.next;\r\n  }\r\n\r\n  if (options.path1 && options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && !options.direction_path3) {\r\n    if (options.direction_path1 === 'right') {\r\n      this.path2_direction = 'bottom';\r\n      this.path1_direction = 'right';\r\n      this.path3_direction = 'top';\r\n    } else if (options.direction_path1 === 'top') {\r\n      this.path2_direction = 'right';\r\n      this.path1_direction = 'top';\r\n      this.path3_direction = 'bottom';\r\n    } else if (options.direction_path1 === 'left') {\r\n      this.path2_direction = 'right';\r\n      this.path1_direction = 'left';\r\n      this.path3_direction = 'bottom';\r\n    } else {\r\n      this.path2_direction = 'right';\r\n      this.path1_direction = 'bottom';\r\n      this.path3_direction = 'top';\r\n    }\r\n  } else if (options.path1 && !options.direction_path1 && options.path2 && options.direction_path2 && options.path3 && !options.direction_path3) {\r\n    if (options.direction_path2 === 'right') {\r\n      this.path1_direction = 'bottom';\r\n      this.path2_direction = 'right';\r\n      this.path3_direction = 'top';\r\n    } else if (options.direction_path2 === 'left') {\r\n      this.path1_direction = 'bottom';\r\n      this.path2_direction = 'left';\r\n      this.path3_direction = 'right';\r\n    } else {\r\n      this.path1_direction = 'right';\r\n      this.path2_direction = 'bottom';\r\n      this.path3_direction = 'top';\r\n    }\r\n  } else if (options.path1 && !options.direction_path1 && options.path2 && !options.direction_path2 && options.path3 && options.direction_path3) {\r\n    if (options.direction_path2 === 'right') {\r\n      this.path1_direction = 'bottom';\r\n      this.path2_direction = 'top';\r\n      this.path3_direction = 'right';\r\n    } else if (options.direction_path2 === 'left') {\r\n      this.path1_direction = 'bottom';\r\n      this.path2_direction = 'right';\r\n      this.path3_direction = 'left';\r\n    } else {\r\n      this.path1_direction = 'right';\r\n      this.path2_direction = 'bottom';\r\n      this.path3_direction = 'top';\r\n    }\r\n  } else {\r\n    this.path1_direction = options.direction_path1;\r\n    this.path2_direction = options.direction_path2;\r\n    this.path3_direction = options.direction_path3;\r\n  }\r\n\r\n  this.path1_direction = this.path1_direction || 'bottom';\r\n  this.path2_direction = this.path2_direction || 'right';\r\n  this.path3_direction = this.path3_direction || 'top';\r\n\r\n  this.initialize();\r\n}\r\ninherits(Parallel, Symbol);\r\n\r\nParallel.prototype.render = function() {\r\n\r\n  if (this.path1_direction) {\r\n    this[this.path1_direction + '_symbol'] = this.path1_symbol;\r\n  }\r\n\r\n  if (this.path2_direction) {\r\n    this[this.path2_direction + '_symbol'] = this.path2_symbol;\r\n  }\r\n\r\n  if (this.path3_direction) {\r\n    this[this.path3_direction + '_symbol'] = this.path3_symbol;\r\n  }\r\n\r\n  var lineLength = this.getAttr('line-length');\r\n\r\n  if (this.bottom_symbol) {\r\n    var bottomPoint = this.getBottom();\r\n\r\n    if (!this.bottom_symbol.isPositioned) {\r\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width / 2);\r\n      this.bottom_symbol.isPositioned = true;\r\n\r\n      this.bottom_symbol.render();\r\n    }\r\n  }\r\n\r\n  if (this.top_symbol) {\r\n    var topPoint = this.getTop();\r\n\r\n    if (!this.top_symbol.isPositioned) {\r\n      this.top_symbol.shiftY(this.getY() - this.top_symbol.height - lineLength);\r\n      this.top_symbol.setX(topPoint.x + this.top_symbol.width);\r\n      this.top_symbol.isPositioned = true;\r\n\r\n      this.top_symbol.render();\r\n    }\r\n  }\r\n\r\n  var self = this;\r\n\r\n  if (this.left_symbol) {\r\n    var leftPoint = this.getLeft();\r\n\r\n    if (!this.left_symbol.isPositioned) {\r\n      this.left_symbol.setY(leftPoint.y - this.left_symbol.height / 2);\r\n      this.left_symbol.shiftX(-(this.group.getBBox().x + this.width + lineLength));\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n\r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n            var diff = Math.abs(symb.getCenter().x - self.left_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.left_symbol.getCenter().y && diff <= self.left_symbol.width / 2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasSymbolUnder) {\r\n          if (self.left_symbol.symbolType === 'end') return;\r\n          self.left_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n\r\n      this.left_symbol.isPositioned = true;\r\n\r\n      this.left_symbol.render();\r\n    }\r\n  }\r\n\r\n  if (this.right_symbol) {\r\n    var rightPoint = this.getRight();\r\n\r\n    if (!this.right_symbol.isPositioned) {\r\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height / 2);\r\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n\r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') {\r\n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width / 2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasSymbolUnder) {\r\n          if (self.right_symbol.symbolType === 'end') return;\r\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n\r\n      this.right_symbol.isPositioned = true;\r\n\r\n      this.right_symbol.render();\r\n    }\r\n  }\r\n};\r\n\r\nParallel.prototype.renderLines = function() {\r\n  if (this.path1_symbol) {\r\n    this.drawLineTo(this.path1_symbol, '', this.path1_direction);\r\n  }\r\n\r\n  if (this.path2_symbol) {\r\n    this.drawLineTo(this.path2_symbol, '', this.path2_direction);\r\n  }\r\n\r\n  if (this.path3_symbol) {\r\n    this.drawLineTo(this.path3_symbol, '', this.path3_direction);\r\n  }\r\n};\r\n\r\nmodule.exports = Parallel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.parallel.js\n// module id = 6\n// module chunks = 0","var Raphael = require('raphael');\r\nvar defaults = require('./flowchart.helpers').defaults;\r\nvar defaultOptions = require('./flowchart.defaults');\r\nvar Condition = require('./flowchart.symbol.condition');\r\nvar Parallel = require('./flowchart.symbol.parallel');\r\n\r\nfunction FlowChart(container, options) {\r\n  options = options || {};\r\n\r\n  this.paper = new Raphael(container);\r\n\r\n  this.options = defaults(options, defaultOptions);\r\n\r\n  this.symbols = [];\r\n  this.lines = [];\r\n  this.start = null;\r\n}\r\n\r\nFlowChart.prototype.handle = function(symbol) {\r\n  if (this.symbols.indexOf(symbol) <= -1) {\r\n    this.symbols.push(symbol);\r\n  }\r\n\r\n  var flowChart = this;\r\n\r\n  if (symbol instanceof(Condition)) {\r\n    symbol.yes = function(nextSymbol) {\r\n      symbol.yes_symbol = nextSymbol;\r\n      if(symbol.no_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n    symbol.no = function(nextSymbol) {\r\n      symbol.no_symbol = nextSymbol;\r\n      if (symbol.yes_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  } else if (symbol instanceof(Parallel)) {\r\n    symbol.path1 = function(nextSymbol) {\r\n      symbol.path1_symbol = nextSymbol;\r\n      if (symbol.path2_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n    symbol.path2 = function(nextSymbol) {\r\n      symbol.path2_symbol = nextSymbol;\r\n      if (symbol.path3_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n    symbol.path3 = function(nextSymbol) {\r\n      symbol.path3_symbol = nextSymbol;\r\n      if (symbol.path1_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  } else {\r\n    symbol.then = function(nextSymbol) {\r\n      symbol.next = nextSymbol;\r\n      symbol.pathOk = true;\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  }\r\n\r\n  return symbol;\r\n};\r\n\r\nFlowChart.prototype.startWith = function(symbol) {\r\n  this.start = symbol;\r\n  return this.handle(symbol);\r\n};\r\n\r\nFlowChart.prototype.render = function() {\r\n  var maxWidth = 0,\r\n    maxHeight = 0,\r\n    i = 0,\r\n    len = 0,\r\n    maxX = 0,\r\n    maxY = 0,\r\n    minX = 0,\r\n    minY = 0,\r\n    symbol,\r\n    line;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    if (symbol.width > maxWidth) {\r\n      maxWidth = symbol.width;\r\n    }\r\n    if (symbol.height > maxHeight) {\r\n      maxHeight = symbol.height;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n  }\r\n\r\n  this.start.render();\r\n  //for (i = 0, len = this.symbols.length; i < len; i++) {\r\n  //  symbol = this.symbols[i];\r\n  //  symbol.render();\r\n  //}\r\n\r\n  var chartY = 0;\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    var symbol = this.symbols[i];\r\n    var bottom = symbol.getBottom();\r\n    if (bottom.y > chartY) chartY = bottom.y;\r\n  }\r\n\r\n  var endY = chartY + this.options['line-length'] + 50;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    if (symbol.symbolType === 'end') symbol.setY(endY);\r\n  }\r\n\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.renderLines();\r\n  }\r\n\r\n  maxX = this.maxXFromLine;\r\n\r\n  var x;\r\n  var y;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    var leftX = symbol.getX()\r\n    x = leftX + symbol.width;\r\n    y = symbol.getY() + symbol.height;\r\n    if (leftX < minX) {\r\n      minX = leftX;\r\n    }\r\n    if (x > maxX) {\r\n      maxX = x;\r\n    }\r\n    if (y > maxY) {\r\n      maxY = y;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.lines.length; i < len; i++) {\r\n    line = this.lines[i].getBBox();\r\n    x = line.x;\r\n    y = line.y;\r\n    var x2 = line.x2;\r\n    var y2 = line.y2;\r\n    if (x < minX) {\r\n      minX = x;\r\n    }\r\n    if (y < minY) {\r\n      minY = y;\r\n    }\r\n    if (x2 > maxX) {\r\n      maxX = x2;\r\n    }\r\n    if (y2 > maxY) {\r\n      maxY = y2;\r\n    }\r\n  }\r\n\r\n  var scale = this.options['scale'];\r\n  var lineWidth = this.options['line-width'];\r\n\r\n  if (this.minXFromSymbols < minX) minX = this.minXFromSymbols;\r\n\r\n  if (minX < 0) minX -= lineWidth;\r\n  if (minY < 0) minY -= lineWidth;\r\n\r\n  var width = maxX + lineWidth - minX;\r\n  var height = maxY + lineWidth - minY;\r\n\r\n  this.paper.setSize(width * scale, height * scale);\r\n  this.paper.setViewBox(minX, minY, width, height, true);\r\n};\r\n\r\nFlowChart.prototype.clean = function() {\r\n  if (this.paper) {\r\n    var paperDom = this.paper.canvas;\r\n    paperDom.parentNode && paperDom.parentNode.removeChild(paperDom);\r\n  }\r\n};\r\n\r\nmodule.exports = FlowChart;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 7\n// module chunks = 0","// defaults\r\nmodule.exports = {\r\n  'x': 0,\r\n  'y': 0,\r\n  'line-width': 3,\r\n  'line-length': 50,\r\n  'text-margin': 10,\r\n  'font-size': 14,\r\n  'font-color': 'black',\r\n  // 'font': 'normal',\r\n  // 'font-family': 'calibri',\r\n  // 'font-weight': 'normal',\r\n  'line-color': 'black',\r\n  'element-color': 'black',\r\n  'fill': 'white',\r\n  'yes-text': 'yes',\r\n  'no-text': 'no',\r\n  'arrow-end': 'block',\r\n  'class': 'flowchart',\r\n  'scale': 1,\r\n  'symbols': {\r\n    'start': {},\r\n    'end': {},\r\n    'condition': {},\r\n    'inputoutput': {},\r\n    'operation': {},\r\n    'subroutine': {},\r\n    'parallel': {}\r\n  } //,\r\n  // 'flowstate' : {\r\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n  //   'future' : { 'fill': '#FFFF99'},\r\n  //   'invalid': {'fill': '#444444'}\r\n  // }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 8\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.indexOf) {\r\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = 0;\r\n    if (arguments.length > 0) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) { // shortcut for verifying if it's NaN\r\n        n = 0;\r\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    if (n >= len) {\r\n      return -1;\r\n    }\r\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n    for (; k < len; k++) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\n// add lastIndexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.lastIndexOf) {\r\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = len;\r\n    if (arguments.length > 1) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) {\r\n        n = 0;\r\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n    for (; k >= 0; k--) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function() {\r\n    return this.replace(/^\\s+|\\s+$/g, '');\r\n  };\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction End(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 10);\r\n  options = options || {};\r\n  options.text = options.text || 'End';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(End, Symbol);\r\n\r\nmodule.exports = End;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction InputOutput(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.textMargin = this.getAttr('text-margin');\r\n\r\n  this.text.attr({\r\n    x: this.textMargin * 3\r\n  });\r\n\r\n  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n  var startX = this.textMargin;\r\n  var startY = height/2;\r\n\r\n  var start = {x: startX, y: startY};\r\n  var points = [\r\n    {x: startX - this.textMargin, y: height},\r\n    {x: startX - this.textMargin + width, y: height},\r\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n    {x: startX, y: startY}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.text.attr({\r\n    y: symbol.getBBox().height/2\r\n  });\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n  this.symbol = symbol\r\n\r\n  this.initialize();\r\n}\r\ninherits(InputOutput, Symbol);\r\n\r\nInputOutput.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nInputOutput.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nmodule.exports = InputOutput;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Operation(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Operation, Symbol);\r\n\r\nmodule.exports = Operation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Start(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n  options = options || {};\r\n  options.text = options.text || 'Start';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Start, Symbol);\r\n\r\nmodule.exports = Start;\r\n\r\n// Start.prototype.render = function() {\r\n//   if (this.next) {\r\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\r\n//     var bottomPoint = this.getBottom();\r\n//     var topPoint = this.next.getTop();\r\n\r\n//     if (!this.next.isPositioned) {\r\n//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n//       this.next.isPositioned = true;\r\n\r\n//       this.next.render();\r\n//     }\r\n//   }\r\n// };\r\n\r\n// Start.prototype.renderLines = function() {\r\n//   if (this.next) {\r\n//     this.drawLineTo(this.next);\r\n//   }\r\n// };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 13\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Subroutine(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n\r\n  symbol.attr({\r\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n  });\r\n\r\n  this.text.attr({\r\n    'x': 2 * this.getAttr('text-margin')\r\n  });\r\n\r\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n  innerWrap.attr({\r\n    x: this.getAttr('text-margin'),\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\r\n  var font = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n\r\n  if (font) innerWrap.attr({ 'font': font });\r\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { innerWrap.attr('href', options.link); }\r\n  if (options.target) { innerWrap.attr('target', options.target); }\r\n  this.group.push(innerWrap);\r\n  innerWrap.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(Subroutine, Symbol);\r\n\r\nmodule.exports = Subroutine;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 14\n// module chunks = 0","if (typeof jQuery != 'undefined') {\r\n\tvar parse = require('./flowchart.parse');\r\n\r\n\t(function( $ ) {\r\n\t\tfunction paramFit(needle, haystack) {\r\n\t\t\treturn needle == haystack ||\r\n\t\t\t( Array.isArray(haystack) && (haystack.includes(needle) || haystack.includes(Number(needle)) ))\r\n\t\t}\r\n\t\tvar methods = {\r\n\t\t\tinit : function(options) {\r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\tthis.chart = parse($this.text());\r\n\t\t\t\t\t$this.html('');\r\n\t\t\t\t\tthis.chart.drawSVG(this, options);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetFlowStateByParam : function(param, paramValue, newFlowState) {\r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar chart = this.chart;\r\n\r\n\t\t\t\t\t// @todo this should be part of Symbol API\r\n\t\t\t\t\tvar nextSymbolKeys = ['next', 'yes', 'no', 'path1', 'path2', 'path3'];\r\n\r\n\t\t\t\t\tfor (var property in chart.symbols) {\r\n\t\t\t\t\t\tif (chart.symbols.hasOwnProperty(property)) {\r\n\t\t\t\t\t\t\tvar symbol = chart.symbols[property];\r\n\t\t\t\t\t\t\tvar val = symbol.params[param];\r\n\t\t\t\t\t\t\tif (paramFit(val, paramValue)) {\r\n\t\t\t\t\t\t\t\tsymbol.flowstate = newFlowState;\r\n\t\t\t\t\t\t\t\tfor (var nski = 0; nski < nextSymbolKeys.length; nski++) {\r\n\t\t\t\t\t\t\t\t\tvar nextSymbolKey = nextSymbolKeys[nski];\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey] &&\r\n\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey]['params'] &&\r\n\t\t\t\t\t\t\t\t\t\tsymbol[nextSymbolKey]['params'][param] &&\r\n\t\t\t\t\t\t\t\t\t\tparamFit(symbol[nextSymbolKey]['params'][param], paramValue)\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\tsymbol.lineStyle[symbol[nextSymbolKey]['key']] = {stroke: chart.options()['flowstate'][newFlowState]['fill']};\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchart.clean();\r\n\t\t\t\t\tchart.drawSVG(this);\r\n\t\t\t\t});\r\n\r\n\t\t\t},\r\n\t\t\tclearFlowState: function () {\r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar chart = this.chart;\r\n\r\n\t\t\t\t\tfor (var property in chart.symbols) {\r\n\t\t\t\t\t\tif (chart.symbols.hasOwnProperty(property)) {\r\n\t\t\t\t\t\t\tvar node = chart.symbols[property];\r\n\t\t\t\t\t\t\tnode.flowstate = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchart.clean();\r\n\t\t\t\t\tchart.drawSVG(this);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.flowChart = function(methodOrOptions) {\r\n\t\t\tif ( methods[methodOrOptions] ) {\r\n\t\t\t\treturn methods[ methodOrOptions ].apply( this, Array.prototype.slice.call( arguments, 1 ));\r\n\t\t\t} else if ( typeof methodOrOptions === 'object' || ! methodOrOptions ) {\r\n\t\t\t\t// Default to \"init\"\r\n\t\t\t\treturn methods.init.apply( this, arguments );\r\n\t\t\t} else {\r\n\t\t\t\t$.error( 'Method ' +  methodOrOptions + ' does not exist on jQuery.flowChart' );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t})(jQuery); // eslint-disable-line\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 15\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}